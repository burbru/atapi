/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the SecuritySponsorshipView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecuritySponsorshipView{}

// SecuritySponsorshipView struct for SecuritySponsorshipView
type SecuritySponsorshipView struct {
	DesignatedSponsor *CompactCompanyView `json:"designatedSponsor,omitempty"`
	Listing *ListingView `json:"listing,omitempty"`
	SponsorRating *DesignatedSponsorRatingView `json:"sponsorRating,omitempty"`
}

// NewSecuritySponsorshipView instantiates a new SecuritySponsorshipView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecuritySponsorshipView() *SecuritySponsorshipView {
	this := SecuritySponsorshipView{}
	return &this
}

// NewSecuritySponsorshipViewWithDefaults instantiates a new SecuritySponsorshipView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecuritySponsorshipViewWithDefaults() *SecuritySponsorshipView {
	this := SecuritySponsorshipView{}
	return &this
}

// GetDesignatedSponsor returns the DesignatedSponsor field value if set, zero value otherwise.
func (o *SecuritySponsorshipView) GetDesignatedSponsor() CompactCompanyView {
	if o == nil || IsNil(o.DesignatedSponsor) {
		var ret CompactCompanyView
		return ret
	}
	return *o.DesignatedSponsor
}

// GetDesignatedSponsorOk returns a tuple with the DesignatedSponsor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySponsorshipView) GetDesignatedSponsorOk() (*CompactCompanyView, bool) {
	if o == nil || IsNil(o.DesignatedSponsor) {
		return nil, false
	}
	return o.DesignatedSponsor, true
}

// HasDesignatedSponsor returns a boolean if a field has been set.
func (o *SecuritySponsorshipView) HasDesignatedSponsor() bool {
	if o != nil && !IsNil(o.DesignatedSponsor) {
		return true
	}

	return false
}

// SetDesignatedSponsor gets a reference to the given CompactCompanyView and assigns it to the DesignatedSponsor field.
func (o *SecuritySponsorshipView) SetDesignatedSponsor(v CompactCompanyView) {
	o.DesignatedSponsor = &v
}

// GetListing returns the Listing field value if set, zero value otherwise.
func (o *SecuritySponsorshipView) GetListing() ListingView {
	if o == nil || IsNil(o.Listing) {
		var ret ListingView
		return ret
	}
	return *o.Listing
}

// GetListingOk returns a tuple with the Listing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySponsorshipView) GetListingOk() (*ListingView, bool) {
	if o == nil || IsNil(o.Listing) {
		return nil, false
	}
	return o.Listing, true
}

// HasListing returns a boolean if a field has been set.
func (o *SecuritySponsorshipView) HasListing() bool {
	if o != nil && !IsNil(o.Listing) {
		return true
	}

	return false
}

// SetListing gets a reference to the given ListingView and assigns it to the Listing field.
func (o *SecuritySponsorshipView) SetListing(v ListingView) {
	o.Listing = &v
}

// GetSponsorRating returns the SponsorRating field value if set, zero value otherwise.
func (o *SecuritySponsorshipView) GetSponsorRating() DesignatedSponsorRatingView {
	if o == nil || IsNil(o.SponsorRating) {
		var ret DesignatedSponsorRatingView
		return ret
	}
	return *o.SponsorRating
}

// GetSponsorRatingOk returns a tuple with the SponsorRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySponsorshipView) GetSponsorRatingOk() (*DesignatedSponsorRatingView, bool) {
	if o == nil || IsNil(o.SponsorRating) {
		return nil, false
	}
	return o.SponsorRating, true
}

// HasSponsorRating returns a boolean if a field has been set.
func (o *SecuritySponsorshipView) HasSponsorRating() bool {
	if o != nil && !IsNil(o.SponsorRating) {
		return true
	}

	return false
}

// SetSponsorRating gets a reference to the given DesignatedSponsorRatingView and assigns it to the SponsorRating field.
func (o *SecuritySponsorshipView) SetSponsorRating(v DesignatedSponsorRatingView) {
	o.SponsorRating = &v
}

func (o SecuritySponsorshipView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecuritySponsorshipView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DesignatedSponsor) {
		toSerialize["designatedSponsor"] = o.DesignatedSponsor
	}
	if !IsNil(o.Listing) {
		toSerialize["listing"] = o.Listing
	}
	if !IsNil(o.SponsorRating) {
		toSerialize["sponsorRating"] = o.SponsorRating
	}
	return toSerialize, nil
}

type NullableSecuritySponsorshipView struct {
	value *SecuritySponsorshipView
	isSet bool
}

func (v NullableSecuritySponsorshipView) Get() *SecuritySponsorshipView {
	return v.value
}

func (v *NullableSecuritySponsorshipView) Set(val *SecuritySponsorshipView) {
	v.value = val
	v.isSet = true
}

func (v NullableSecuritySponsorshipView) IsSet() bool {
	return v.isSet
}

func (v *NullableSecuritySponsorshipView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecuritySponsorshipView(val *SecuritySponsorshipView) *NullableSecuritySponsorshipView {
	return &NullableSecuritySponsorshipView{value: val, isSet: true}
}

func (v NullableSecuritySponsorshipView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecuritySponsorshipView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


