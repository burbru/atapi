/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the InterestTenderView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterestTenderView{}

// InterestTenderView struct for InterestTenderView
type InterestTenderView struct {
	BondListing *ListingView `json:"bondListing,omitempty"`
	EndDate *int64 `json:"endDate,omitempty"`
	Id *string `json:"id,omitempty"`
	Version *int64 `json:"version,omitempty"`
}

// NewInterestTenderView instantiates a new InterestTenderView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterestTenderView() *InterestTenderView {
	this := InterestTenderView{}
	return &this
}

// NewInterestTenderViewWithDefaults instantiates a new InterestTenderView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterestTenderViewWithDefaults() *InterestTenderView {
	this := InterestTenderView{}
	return &this
}

// GetBondListing returns the BondListing field value if set, zero value otherwise.
func (o *InterestTenderView) GetBondListing() ListingView {
	if o == nil || IsNil(o.BondListing) {
		var ret ListingView
		return ret
	}
	return *o.BondListing
}

// GetBondListingOk returns a tuple with the BondListing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterestTenderView) GetBondListingOk() (*ListingView, bool) {
	if o == nil || IsNil(o.BondListing) {
		return nil, false
	}
	return o.BondListing, true
}

// HasBondListing returns a boolean if a field has been set.
func (o *InterestTenderView) HasBondListing() bool {
	if o != nil && !IsNil(o.BondListing) {
		return true
	}

	return false
}

// SetBondListing gets a reference to the given ListingView and assigns it to the BondListing field.
func (o *InterestTenderView) SetBondListing(v ListingView) {
	o.BondListing = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *InterestTenderView) GetEndDate() int64 {
	if o == nil || IsNil(o.EndDate) {
		var ret int64
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterestTenderView) GetEndDateOk() (*int64, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *InterestTenderView) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given int64 and assigns it to the EndDate field.
func (o *InterestTenderView) SetEndDate(v int64) {
	o.EndDate = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InterestTenderView) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterestTenderView) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InterestTenderView) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InterestTenderView) SetId(v string) {
	o.Id = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *InterestTenderView) GetVersion() int64 {
	if o == nil || IsNil(o.Version) {
		var ret int64
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterestTenderView) GetVersionOk() (*int64, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *InterestTenderView) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int64 and assigns it to the Version field.
func (o *InterestTenderView) SetVersion(v int64) {
	o.Version = &v
}

func (o InterestTenderView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterestTenderView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BondListing) {
		toSerialize["bondListing"] = o.BondListing
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableInterestTenderView struct {
	value *InterestTenderView
	isSet bool
}

func (v NullableInterestTenderView) Get() *InterestTenderView {
	return v.value
}

func (v *NullableInterestTenderView) Set(val *InterestTenderView) {
	v.value = val
	v.isSet = true
}

func (v NullableInterestTenderView) IsSet() bool {
	return v.isSet
}

func (v *NullableInterestTenderView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterestTenderView(val *InterestTenderView) *NullableInterestTenderView {
	return &NullableInterestTenderView{value: val, isSet: true}
}

func (v NullableInterestTenderView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterestTenderView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


