/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the CashTransferLogEntryView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CashTransferLogEntryView{}

// CashTransferLogEntryView struct for CashTransferLogEntryView
type CashTransferLogEntryView struct {
	Amount *float32 `json:"amount,omitempty"`
	Date *int64 `json:"date,omitempty"`
	Id *string `json:"id,omitempty"`
	Message *MessagePrototype `json:"message,omitempty"`
	ReceiverBankAccount *string `json:"receiverBankAccount,omitempty"`
	SenderBankAccount *string `json:"senderBankAccount,omitempty"`
	Version *int64 `json:"version,omitempty"`
}

// NewCashTransferLogEntryView instantiates a new CashTransferLogEntryView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCashTransferLogEntryView() *CashTransferLogEntryView {
	this := CashTransferLogEntryView{}
	return &this
}

// NewCashTransferLogEntryViewWithDefaults instantiates a new CashTransferLogEntryView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCashTransferLogEntryViewWithDefaults() *CashTransferLogEntryView {
	this := CashTransferLogEntryView{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *CashTransferLogEntryView) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashTransferLogEntryView) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *CashTransferLogEntryView) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *CashTransferLogEntryView) SetAmount(v float32) {
	o.Amount = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *CashTransferLogEntryView) GetDate() int64 {
	if o == nil || IsNil(o.Date) {
		var ret int64
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashTransferLogEntryView) GetDateOk() (*int64, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *CashTransferLogEntryView) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given int64 and assigns it to the Date field.
func (o *CashTransferLogEntryView) SetDate(v int64) {
	o.Date = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CashTransferLogEntryView) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashTransferLogEntryView) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CashTransferLogEntryView) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CashTransferLogEntryView) SetId(v string) {
	o.Id = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *CashTransferLogEntryView) GetMessage() MessagePrototype {
	if o == nil || IsNil(o.Message) {
		var ret MessagePrototype
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashTransferLogEntryView) GetMessageOk() (*MessagePrototype, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *CashTransferLogEntryView) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given MessagePrototype and assigns it to the Message field.
func (o *CashTransferLogEntryView) SetMessage(v MessagePrototype) {
	o.Message = &v
}

// GetReceiverBankAccount returns the ReceiverBankAccount field value if set, zero value otherwise.
func (o *CashTransferLogEntryView) GetReceiverBankAccount() string {
	if o == nil || IsNil(o.ReceiverBankAccount) {
		var ret string
		return ret
	}
	return *o.ReceiverBankAccount
}

// GetReceiverBankAccountOk returns a tuple with the ReceiverBankAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashTransferLogEntryView) GetReceiverBankAccountOk() (*string, bool) {
	if o == nil || IsNil(o.ReceiverBankAccount) {
		return nil, false
	}
	return o.ReceiverBankAccount, true
}

// HasReceiverBankAccount returns a boolean if a field has been set.
func (o *CashTransferLogEntryView) HasReceiverBankAccount() bool {
	if o != nil && !IsNil(o.ReceiverBankAccount) {
		return true
	}

	return false
}

// SetReceiverBankAccount gets a reference to the given string and assigns it to the ReceiverBankAccount field.
func (o *CashTransferLogEntryView) SetReceiverBankAccount(v string) {
	o.ReceiverBankAccount = &v
}

// GetSenderBankAccount returns the SenderBankAccount field value if set, zero value otherwise.
func (o *CashTransferLogEntryView) GetSenderBankAccount() string {
	if o == nil || IsNil(o.SenderBankAccount) {
		var ret string
		return ret
	}
	return *o.SenderBankAccount
}

// GetSenderBankAccountOk returns a tuple with the SenderBankAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashTransferLogEntryView) GetSenderBankAccountOk() (*string, bool) {
	if o == nil || IsNil(o.SenderBankAccount) {
		return nil, false
	}
	return o.SenderBankAccount, true
}

// HasSenderBankAccount returns a boolean if a field has been set.
func (o *CashTransferLogEntryView) HasSenderBankAccount() bool {
	if o != nil && !IsNil(o.SenderBankAccount) {
		return true
	}

	return false
}

// SetSenderBankAccount gets a reference to the given string and assigns it to the SenderBankAccount field.
func (o *CashTransferLogEntryView) SetSenderBankAccount(v string) {
	o.SenderBankAccount = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CashTransferLogEntryView) GetVersion() int64 {
	if o == nil || IsNil(o.Version) {
		var ret int64
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashTransferLogEntryView) GetVersionOk() (*int64, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CashTransferLogEntryView) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int64 and assigns it to the Version field.
func (o *CashTransferLogEntryView) SetVersion(v int64) {
	o.Version = &v
}

func (o CashTransferLogEntryView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CashTransferLogEntryView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.ReceiverBankAccount) {
		toSerialize["receiverBankAccount"] = o.ReceiverBankAccount
	}
	if !IsNil(o.SenderBankAccount) {
		toSerialize["senderBankAccount"] = o.SenderBankAccount
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableCashTransferLogEntryView struct {
	value *CashTransferLogEntryView
	isSet bool
}

func (v NullableCashTransferLogEntryView) Get() *CashTransferLogEntryView {
	return v.value
}

func (v *NullableCashTransferLogEntryView) Set(val *CashTransferLogEntryView) {
	v.value = val
	v.isSet = true
}

func (v NullableCashTransferLogEntryView) IsSet() bool {
	return v.isSet
}

func (v *NullableCashTransferLogEntryView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCashTransferLogEntryView(val *CashTransferLogEntryView) *NullableCashTransferLogEntryView {
	return &NullableCashTransferLogEntryView{value: val, isSet: true}
}

func (v NullableCashTransferLogEntryView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCashTransferLogEntryView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


