/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the AtsLiveDataView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AtsLiveDataView{}

// AtsLiveDataView struct for AtsLiveDataView
type AtsLiveDataView struct {
	Orders []AtsLiveDataOrderView `json:"orders,omitempty"`
	OrdersLog []AtsLiveDataOrderView `json:"ordersLog,omitempty"`
}

// NewAtsLiveDataView instantiates a new AtsLiveDataView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAtsLiveDataView() *AtsLiveDataView {
	this := AtsLiveDataView{}
	return &this
}

// NewAtsLiveDataViewWithDefaults instantiates a new AtsLiveDataView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAtsLiveDataViewWithDefaults() *AtsLiveDataView {
	this := AtsLiveDataView{}
	return &this
}

// GetOrders returns the Orders field value if set, zero value otherwise.
func (o *AtsLiveDataView) GetOrders() []AtsLiveDataOrderView {
	if o == nil || IsNil(o.Orders) {
		var ret []AtsLiveDataOrderView
		return ret
	}
	return o.Orders
}

// GetOrdersOk returns a tuple with the Orders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtsLiveDataView) GetOrdersOk() ([]AtsLiveDataOrderView, bool) {
	if o == nil || IsNil(o.Orders) {
		return nil, false
	}
	return o.Orders, true
}

// HasOrders returns a boolean if a field has been set.
func (o *AtsLiveDataView) HasOrders() bool {
	if o != nil && !IsNil(o.Orders) {
		return true
	}

	return false
}

// SetOrders gets a reference to the given []AtsLiveDataOrderView and assigns it to the Orders field.
func (o *AtsLiveDataView) SetOrders(v []AtsLiveDataOrderView) {
	o.Orders = v
}

// GetOrdersLog returns the OrdersLog field value if set, zero value otherwise.
func (o *AtsLiveDataView) GetOrdersLog() []AtsLiveDataOrderView {
	if o == nil || IsNil(o.OrdersLog) {
		var ret []AtsLiveDataOrderView
		return ret
	}
	return o.OrdersLog
}

// GetOrdersLogOk returns a tuple with the OrdersLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtsLiveDataView) GetOrdersLogOk() ([]AtsLiveDataOrderView, bool) {
	if o == nil || IsNil(o.OrdersLog) {
		return nil, false
	}
	return o.OrdersLog, true
}

// HasOrdersLog returns a boolean if a field has been set.
func (o *AtsLiveDataView) HasOrdersLog() bool {
	if o != nil && !IsNil(o.OrdersLog) {
		return true
	}

	return false
}

// SetOrdersLog gets a reference to the given []AtsLiveDataOrderView and assigns it to the OrdersLog field.
func (o *AtsLiveDataView) SetOrdersLog(v []AtsLiveDataOrderView) {
	o.OrdersLog = v
}

func (o AtsLiveDataView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AtsLiveDataView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Orders) {
		toSerialize["orders"] = o.Orders
	}
	if !IsNil(o.OrdersLog) {
		toSerialize["ordersLog"] = o.OrdersLog
	}
	return toSerialize, nil
}

type NullableAtsLiveDataView struct {
	value *AtsLiveDataView
	isSet bool
}

func (v NullableAtsLiveDataView) Get() *AtsLiveDataView {
	return v.value
}

func (v *NullableAtsLiveDataView) Set(val *AtsLiveDataView) {
	v.value = val
	v.isSet = true
}

func (v NullableAtsLiveDataView) IsSet() bool {
	return v.isSet
}

func (v *NullableAtsLiveDataView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAtsLiveDataView(val *AtsLiveDataView) *NullableAtsLiveDataView {
	return &NullableAtsLiveDataView{value: val, isSet: true}
}

func (v NullableAtsLiveDataView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAtsLiveDataView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


