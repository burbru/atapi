/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the SecurityOrderCheckResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityOrderCheckResult{}

// SecurityOrderCheckResult struct for SecurityOrderCheckResult
type SecurityOrderCheckResult struct {
	ConcerningParams []string `json:"concerningParams,omitempty"`
	Failed *bool `json:"failed,omitempty"`
	Msg *MessagePrototype `json:"msg,omitempty"`
	Ok *bool `json:"ok,omitempty"`
}

// NewSecurityOrderCheckResult instantiates a new SecurityOrderCheckResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityOrderCheckResult() *SecurityOrderCheckResult {
	this := SecurityOrderCheckResult{}
	return &this
}

// NewSecurityOrderCheckResultWithDefaults instantiates a new SecurityOrderCheckResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityOrderCheckResultWithDefaults() *SecurityOrderCheckResult {
	this := SecurityOrderCheckResult{}
	return &this
}

// GetConcerningParams returns the ConcerningParams field value if set, zero value otherwise.
func (o *SecurityOrderCheckResult) GetConcerningParams() []string {
	if o == nil || IsNil(o.ConcerningParams) {
		var ret []string
		return ret
	}
	return o.ConcerningParams
}

// GetConcerningParamsOk returns a tuple with the ConcerningParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityOrderCheckResult) GetConcerningParamsOk() ([]string, bool) {
	if o == nil || IsNil(o.ConcerningParams) {
		return nil, false
	}
	return o.ConcerningParams, true
}

// HasConcerningParams returns a boolean if a field has been set.
func (o *SecurityOrderCheckResult) HasConcerningParams() bool {
	if o != nil && !IsNil(o.ConcerningParams) {
		return true
	}

	return false
}

// SetConcerningParams gets a reference to the given []string and assigns it to the ConcerningParams field.
func (o *SecurityOrderCheckResult) SetConcerningParams(v []string) {
	o.ConcerningParams = v
}

// GetFailed returns the Failed field value if set, zero value otherwise.
func (o *SecurityOrderCheckResult) GetFailed() bool {
	if o == nil || IsNil(o.Failed) {
		var ret bool
		return ret
	}
	return *o.Failed
}

// GetFailedOk returns a tuple with the Failed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityOrderCheckResult) GetFailedOk() (*bool, bool) {
	if o == nil || IsNil(o.Failed) {
		return nil, false
	}
	return o.Failed, true
}

// HasFailed returns a boolean if a field has been set.
func (o *SecurityOrderCheckResult) HasFailed() bool {
	if o != nil && !IsNil(o.Failed) {
		return true
	}

	return false
}

// SetFailed gets a reference to the given bool and assigns it to the Failed field.
func (o *SecurityOrderCheckResult) SetFailed(v bool) {
	o.Failed = &v
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *SecurityOrderCheckResult) GetMsg() MessagePrototype {
	if o == nil || IsNil(o.Msg) {
		var ret MessagePrototype
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityOrderCheckResult) GetMsgOk() (*MessagePrototype, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *SecurityOrderCheckResult) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given MessagePrototype and assigns it to the Msg field.
func (o *SecurityOrderCheckResult) SetMsg(v MessagePrototype) {
	o.Msg = &v
}

// GetOk returns the Ok field value if set, zero value otherwise.
func (o *SecurityOrderCheckResult) GetOk() bool {
	if o == nil || IsNil(o.Ok) {
		var ret bool
		return ret
	}
	return *o.Ok
}

// GetOkOk returns a tuple with the Ok field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityOrderCheckResult) GetOkOk() (*bool, bool) {
	if o == nil || IsNil(o.Ok) {
		return nil, false
	}
	return o.Ok, true
}

// HasOk returns a boolean if a field has been set.
func (o *SecurityOrderCheckResult) HasOk() bool {
	if o != nil && !IsNil(o.Ok) {
		return true
	}

	return false
}

// SetOk gets a reference to the given bool and assigns it to the Ok field.
func (o *SecurityOrderCheckResult) SetOk(v bool) {
	o.Ok = &v
}

func (o SecurityOrderCheckResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityOrderCheckResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConcerningParams) {
		toSerialize["concerningParams"] = o.ConcerningParams
	}
	if !IsNil(o.Failed) {
		toSerialize["failed"] = o.Failed
	}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.Ok) {
		toSerialize["ok"] = o.Ok
	}
	return toSerialize, nil
}

type NullableSecurityOrderCheckResult struct {
	value *SecurityOrderCheckResult
	isSet bool
}

func (v NullableSecurityOrderCheckResult) Get() *SecurityOrderCheckResult {
	return v.value
}

func (v *NullableSecurityOrderCheckResult) Set(val *SecurityOrderCheckResult) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityOrderCheckResult) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityOrderCheckResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityOrderCheckResult(val *SecurityOrderCheckResult) *NullableSecurityOrderCheckResult {
	return &NullableSecurityOrderCheckResult{value: val, isSet: true}
}

func (v NullableSecurityOrderCheckResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityOrderCheckResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


