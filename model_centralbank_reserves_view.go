/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the CentralbankReservesView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralbankReservesView{}

// CentralbankReservesView struct for CentralbankReservesView
type CentralbankReservesView struct {
	BankingLicense *BankingLicenseView `json:"bankingLicense,omitempty"`
	CashHolding *float32 `json:"cashHolding,omitempty"`
	CoinsForNextBoost *int64 `json:"coinsForNextBoost,omitempty"`
	Id *string `json:"id,omitempty"`
	InterestRateBoost *float32 `json:"interestRateBoost,omitempty"`
	MaxCentralBankLoans *float32 `json:"maxCentralBankLoans,omitempty"`
	Version *int64 `json:"version,omitempty"`
}

// NewCentralbankReservesView instantiates a new CentralbankReservesView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralbankReservesView() *CentralbankReservesView {
	this := CentralbankReservesView{}
	return &this
}

// NewCentralbankReservesViewWithDefaults instantiates a new CentralbankReservesView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralbankReservesViewWithDefaults() *CentralbankReservesView {
	this := CentralbankReservesView{}
	return &this
}

// GetBankingLicense returns the BankingLicense field value if set, zero value otherwise.
func (o *CentralbankReservesView) GetBankingLicense() BankingLicenseView {
	if o == nil || IsNil(o.BankingLicense) {
		var ret BankingLicenseView
		return ret
	}
	return *o.BankingLicense
}

// GetBankingLicenseOk returns a tuple with the BankingLicense field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralbankReservesView) GetBankingLicenseOk() (*BankingLicenseView, bool) {
	if o == nil || IsNil(o.BankingLicense) {
		return nil, false
	}
	return o.BankingLicense, true
}

// HasBankingLicense returns a boolean if a field has been set.
func (o *CentralbankReservesView) HasBankingLicense() bool {
	if o != nil && !IsNil(o.BankingLicense) {
		return true
	}

	return false
}

// SetBankingLicense gets a reference to the given BankingLicenseView and assigns it to the BankingLicense field.
func (o *CentralbankReservesView) SetBankingLicense(v BankingLicenseView) {
	o.BankingLicense = &v
}

// GetCashHolding returns the CashHolding field value if set, zero value otherwise.
func (o *CentralbankReservesView) GetCashHolding() float32 {
	if o == nil || IsNil(o.CashHolding) {
		var ret float32
		return ret
	}
	return *o.CashHolding
}

// GetCashHoldingOk returns a tuple with the CashHolding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralbankReservesView) GetCashHoldingOk() (*float32, bool) {
	if o == nil || IsNil(o.CashHolding) {
		return nil, false
	}
	return o.CashHolding, true
}

// HasCashHolding returns a boolean if a field has been set.
func (o *CentralbankReservesView) HasCashHolding() bool {
	if o != nil && !IsNil(o.CashHolding) {
		return true
	}

	return false
}

// SetCashHolding gets a reference to the given float32 and assigns it to the CashHolding field.
func (o *CentralbankReservesView) SetCashHolding(v float32) {
	o.CashHolding = &v
}

// GetCoinsForNextBoost returns the CoinsForNextBoost field value if set, zero value otherwise.
func (o *CentralbankReservesView) GetCoinsForNextBoost() int64 {
	if o == nil || IsNil(o.CoinsForNextBoost) {
		var ret int64
		return ret
	}
	return *o.CoinsForNextBoost
}

// GetCoinsForNextBoostOk returns a tuple with the CoinsForNextBoost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralbankReservesView) GetCoinsForNextBoostOk() (*int64, bool) {
	if o == nil || IsNil(o.CoinsForNextBoost) {
		return nil, false
	}
	return o.CoinsForNextBoost, true
}

// HasCoinsForNextBoost returns a boolean if a field has been set.
func (o *CentralbankReservesView) HasCoinsForNextBoost() bool {
	if o != nil && !IsNil(o.CoinsForNextBoost) {
		return true
	}

	return false
}

// SetCoinsForNextBoost gets a reference to the given int64 and assigns it to the CoinsForNextBoost field.
func (o *CentralbankReservesView) SetCoinsForNextBoost(v int64) {
	o.CoinsForNextBoost = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CentralbankReservesView) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralbankReservesView) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CentralbankReservesView) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CentralbankReservesView) SetId(v string) {
	o.Id = &v
}

// GetInterestRateBoost returns the InterestRateBoost field value if set, zero value otherwise.
func (o *CentralbankReservesView) GetInterestRateBoost() float32 {
	if o == nil || IsNil(o.InterestRateBoost) {
		var ret float32
		return ret
	}
	return *o.InterestRateBoost
}

// GetInterestRateBoostOk returns a tuple with the InterestRateBoost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralbankReservesView) GetInterestRateBoostOk() (*float32, bool) {
	if o == nil || IsNil(o.InterestRateBoost) {
		return nil, false
	}
	return o.InterestRateBoost, true
}

// HasInterestRateBoost returns a boolean if a field has been set.
func (o *CentralbankReservesView) HasInterestRateBoost() bool {
	if o != nil && !IsNil(o.InterestRateBoost) {
		return true
	}

	return false
}

// SetInterestRateBoost gets a reference to the given float32 and assigns it to the InterestRateBoost field.
func (o *CentralbankReservesView) SetInterestRateBoost(v float32) {
	o.InterestRateBoost = &v
}

// GetMaxCentralBankLoans returns the MaxCentralBankLoans field value if set, zero value otherwise.
func (o *CentralbankReservesView) GetMaxCentralBankLoans() float32 {
	if o == nil || IsNil(o.MaxCentralBankLoans) {
		var ret float32
		return ret
	}
	return *o.MaxCentralBankLoans
}

// GetMaxCentralBankLoansOk returns a tuple with the MaxCentralBankLoans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralbankReservesView) GetMaxCentralBankLoansOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxCentralBankLoans) {
		return nil, false
	}
	return o.MaxCentralBankLoans, true
}

// HasMaxCentralBankLoans returns a boolean if a field has been set.
func (o *CentralbankReservesView) HasMaxCentralBankLoans() bool {
	if o != nil && !IsNil(o.MaxCentralBankLoans) {
		return true
	}

	return false
}

// SetMaxCentralBankLoans gets a reference to the given float32 and assigns it to the MaxCentralBankLoans field.
func (o *CentralbankReservesView) SetMaxCentralBankLoans(v float32) {
	o.MaxCentralBankLoans = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CentralbankReservesView) GetVersion() int64 {
	if o == nil || IsNil(o.Version) {
		var ret int64
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralbankReservesView) GetVersionOk() (*int64, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CentralbankReservesView) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int64 and assigns it to the Version field.
func (o *CentralbankReservesView) SetVersion(v int64) {
	o.Version = &v
}

func (o CentralbankReservesView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralbankReservesView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BankingLicense) {
		toSerialize["bankingLicense"] = o.BankingLicense
	}
	if !IsNil(o.CashHolding) {
		toSerialize["cashHolding"] = o.CashHolding
	}
	if !IsNil(o.CoinsForNextBoost) {
		toSerialize["coinsForNextBoost"] = o.CoinsForNextBoost
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InterestRateBoost) {
		toSerialize["interestRateBoost"] = o.InterestRateBoost
	}
	if !IsNil(o.MaxCentralBankLoans) {
		toSerialize["maxCentralBankLoans"] = o.MaxCentralBankLoans
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableCentralbankReservesView struct {
	value *CentralbankReservesView
	isSet bool
}

func (v NullableCentralbankReservesView) Get() *CentralbankReservesView {
	return v.value
}

func (v *NullableCentralbankReservesView) Set(val *CentralbankReservesView) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralbankReservesView) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralbankReservesView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralbankReservesView(val *CentralbankReservesView) *NullableCentralbankReservesView {
	return &NullableCentralbankReservesView{value: val, isSet: true}
}

func (v NullableCentralbankReservesView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralbankReservesView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


