/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the PriceSpreadView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceSpreadView{}

// PriceSpreadView struct for PriceSpreadView
type PriceSpreadView struct {
	AskPrice *float32 `json:"askPrice,omitempty"`
	AskSize *int64 `json:"askSize,omitempty"`
	BidPrice *float32 `json:"bidPrice,omitempty"`
	BidSize *int64 `json:"bidSize,omitempty"`
	Date *int64 `json:"date,omitempty"`
	LastPrice *SecurityPriceView `json:"lastPrice,omitempty"`
	MaxBidPrice *float32 `json:"maxBidPrice,omitempty"`
	MinAskPrice *float32 `json:"minAskPrice,omitempty"`
	SpreadAbs *float32 `json:"spreadAbs,omitempty"`
	SpreadPercent *float32 `json:"spreadPercent,omitempty"`
}

// NewPriceSpreadView instantiates a new PriceSpreadView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceSpreadView() *PriceSpreadView {
	this := PriceSpreadView{}
	return &this
}

// NewPriceSpreadViewWithDefaults instantiates a new PriceSpreadView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceSpreadViewWithDefaults() *PriceSpreadView {
	this := PriceSpreadView{}
	return &this
}

// GetAskPrice returns the AskPrice field value if set, zero value otherwise.
func (o *PriceSpreadView) GetAskPrice() float32 {
	if o == nil || IsNil(o.AskPrice) {
		var ret float32
		return ret
	}
	return *o.AskPrice
}

// GetAskPriceOk returns a tuple with the AskPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceSpreadView) GetAskPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.AskPrice) {
		return nil, false
	}
	return o.AskPrice, true
}

// HasAskPrice returns a boolean if a field has been set.
func (o *PriceSpreadView) HasAskPrice() bool {
	if o != nil && !IsNil(o.AskPrice) {
		return true
	}

	return false
}

// SetAskPrice gets a reference to the given float32 and assigns it to the AskPrice field.
func (o *PriceSpreadView) SetAskPrice(v float32) {
	o.AskPrice = &v
}

// GetAskSize returns the AskSize field value if set, zero value otherwise.
func (o *PriceSpreadView) GetAskSize() int64 {
	if o == nil || IsNil(o.AskSize) {
		var ret int64
		return ret
	}
	return *o.AskSize
}

// GetAskSizeOk returns a tuple with the AskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceSpreadView) GetAskSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.AskSize) {
		return nil, false
	}
	return o.AskSize, true
}

// HasAskSize returns a boolean if a field has been set.
func (o *PriceSpreadView) HasAskSize() bool {
	if o != nil && !IsNil(o.AskSize) {
		return true
	}

	return false
}

// SetAskSize gets a reference to the given int64 and assigns it to the AskSize field.
func (o *PriceSpreadView) SetAskSize(v int64) {
	o.AskSize = &v
}

// GetBidPrice returns the BidPrice field value if set, zero value otherwise.
func (o *PriceSpreadView) GetBidPrice() float32 {
	if o == nil || IsNil(o.BidPrice) {
		var ret float32
		return ret
	}
	return *o.BidPrice
}

// GetBidPriceOk returns a tuple with the BidPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceSpreadView) GetBidPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.BidPrice) {
		return nil, false
	}
	return o.BidPrice, true
}

// HasBidPrice returns a boolean if a field has been set.
func (o *PriceSpreadView) HasBidPrice() bool {
	if o != nil && !IsNil(o.BidPrice) {
		return true
	}

	return false
}

// SetBidPrice gets a reference to the given float32 and assigns it to the BidPrice field.
func (o *PriceSpreadView) SetBidPrice(v float32) {
	o.BidPrice = &v
}

// GetBidSize returns the BidSize field value if set, zero value otherwise.
func (o *PriceSpreadView) GetBidSize() int64 {
	if o == nil || IsNil(o.BidSize) {
		var ret int64
		return ret
	}
	return *o.BidSize
}

// GetBidSizeOk returns a tuple with the BidSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceSpreadView) GetBidSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.BidSize) {
		return nil, false
	}
	return o.BidSize, true
}

// HasBidSize returns a boolean if a field has been set.
func (o *PriceSpreadView) HasBidSize() bool {
	if o != nil && !IsNil(o.BidSize) {
		return true
	}

	return false
}

// SetBidSize gets a reference to the given int64 and assigns it to the BidSize field.
func (o *PriceSpreadView) SetBidSize(v int64) {
	o.BidSize = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *PriceSpreadView) GetDate() int64 {
	if o == nil || IsNil(o.Date) {
		var ret int64
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceSpreadView) GetDateOk() (*int64, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *PriceSpreadView) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given int64 and assigns it to the Date field.
func (o *PriceSpreadView) SetDate(v int64) {
	o.Date = &v
}

// GetLastPrice returns the LastPrice field value if set, zero value otherwise.
func (o *PriceSpreadView) GetLastPrice() SecurityPriceView {
	if o == nil || IsNil(o.LastPrice) {
		var ret SecurityPriceView
		return ret
	}
	return *o.LastPrice
}

// GetLastPriceOk returns a tuple with the LastPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceSpreadView) GetLastPriceOk() (*SecurityPriceView, bool) {
	if o == nil || IsNil(o.LastPrice) {
		return nil, false
	}
	return o.LastPrice, true
}

// HasLastPrice returns a boolean if a field has been set.
func (o *PriceSpreadView) HasLastPrice() bool {
	if o != nil && !IsNil(o.LastPrice) {
		return true
	}

	return false
}

// SetLastPrice gets a reference to the given SecurityPriceView and assigns it to the LastPrice field.
func (o *PriceSpreadView) SetLastPrice(v SecurityPriceView) {
	o.LastPrice = &v
}

// GetMaxBidPrice returns the MaxBidPrice field value if set, zero value otherwise.
func (o *PriceSpreadView) GetMaxBidPrice() float32 {
	if o == nil || IsNil(o.MaxBidPrice) {
		var ret float32
		return ret
	}
	return *o.MaxBidPrice
}

// GetMaxBidPriceOk returns a tuple with the MaxBidPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceSpreadView) GetMaxBidPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxBidPrice) {
		return nil, false
	}
	return o.MaxBidPrice, true
}

// HasMaxBidPrice returns a boolean if a field has been set.
func (o *PriceSpreadView) HasMaxBidPrice() bool {
	if o != nil && !IsNil(o.MaxBidPrice) {
		return true
	}

	return false
}

// SetMaxBidPrice gets a reference to the given float32 and assigns it to the MaxBidPrice field.
func (o *PriceSpreadView) SetMaxBidPrice(v float32) {
	o.MaxBidPrice = &v
}

// GetMinAskPrice returns the MinAskPrice field value if set, zero value otherwise.
func (o *PriceSpreadView) GetMinAskPrice() float32 {
	if o == nil || IsNil(o.MinAskPrice) {
		var ret float32
		return ret
	}
	return *o.MinAskPrice
}

// GetMinAskPriceOk returns a tuple with the MinAskPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceSpreadView) GetMinAskPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.MinAskPrice) {
		return nil, false
	}
	return o.MinAskPrice, true
}

// HasMinAskPrice returns a boolean if a field has been set.
func (o *PriceSpreadView) HasMinAskPrice() bool {
	if o != nil && !IsNil(o.MinAskPrice) {
		return true
	}

	return false
}

// SetMinAskPrice gets a reference to the given float32 and assigns it to the MinAskPrice field.
func (o *PriceSpreadView) SetMinAskPrice(v float32) {
	o.MinAskPrice = &v
}

// GetSpreadAbs returns the SpreadAbs field value if set, zero value otherwise.
func (o *PriceSpreadView) GetSpreadAbs() float32 {
	if o == nil || IsNil(o.SpreadAbs) {
		var ret float32
		return ret
	}
	return *o.SpreadAbs
}

// GetSpreadAbsOk returns a tuple with the SpreadAbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceSpreadView) GetSpreadAbsOk() (*float32, bool) {
	if o == nil || IsNil(o.SpreadAbs) {
		return nil, false
	}
	return o.SpreadAbs, true
}

// HasSpreadAbs returns a boolean if a field has been set.
func (o *PriceSpreadView) HasSpreadAbs() bool {
	if o != nil && !IsNil(o.SpreadAbs) {
		return true
	}

	return false
}

// SetSpreadAbs gets a reference to the given float32 and assigns it to the SpreadAbs field.
func (o *PriceSpreadView) SetSpreadAbs(v float32) {
	o.SpreadAbs = &v
}

// GetSpreadPercent returns the SpreadPercent field value if set, zero value otherwise.
func (o *PriceSpreadView) GetSpreadPercent() float32 {
	if o == nil || IsNil(o.SpreadPercent) {
		var ret float32
		return ret
	}
	return *o.SpreadPercent
}

// GetSpreadPercentOk returns a tuple with the SpreadPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceSpreadView) GetSpreadPercentOk() (*float32, bool) {
	if o == nil || IsNil(o.SpreadPercent) {
		return nil, false
	}
	return o.SpreadPercent, true
}

// HasSpreadPercent returns a boolean if a field has been set.
func (o *PriceSpreadView) HasSpreadPercent() bool {
	if o != nil && !IsNil(o.SpreadPercent) {
		return true
	}

	return false
}

// SetSpreadPercent gets a reference to the given float32 and assigns it to the SpreadPercent field.
func (o *PriceSpreadView) SetSpreadPercent(v float32) {
	o.SpreadPercent = &v
}

func (o PriceSpreadView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceSpreadView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AskPrice) {
		toSerialize["askPrice"] = o.AskPrice
	}
	if !IsNil(o.AskSize) {
		toSerialize["askSize"] = o.AskSize
	}
	if !IsNil(o.BidPrice) {
		toSerialize["bidPrice"] = o.BidPrice
	}
	if !IsNil(o.BidSize) {
		toSerialize["bidSize"] = o.BidSize
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.LastPrice) {
		toSerialize["lastPrice"] = o.LastPrice
	}
	if !IsNil(o.MaxBidPrice) {
		toSerialize["maxBidPrice"] = o.MaxBidPrice
	}
	if !IsNil(o.MinAskPrice) {
		toSerialize["minAskPrice"] = o.MinAskPrice
	}
	if !IsNil(o.SpreadAbs) {
		toSerialize["spreadAbs"] = o.SpreadAbs
	}
	if !IsNil(o.SpreadPercent) {
		toSerialize["spreadPercent"] = o.SpreadPercent
	}
	return toSerialize, nil
}

type NullablePriceSpreadView struct {
	value *PriceSpreadView
	isSet bool
}

func (v NullablePriceSpreadView) Get() *PriceSpreadView {
	return v.value
}

func (v *NullablePriceSpreadView) Set(val *PriceSpreadView) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceSpreadView) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceSpreadView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceSpreadView(val *PriceSpreadView) *NullablePriceSpreadView {
	return &NullablePriceSpreadView{value: val, isSet: true}
}

func (v NullablePriceSpreadView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceSpreadView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


