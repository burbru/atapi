/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the DesignatedSponsorRatingView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DesignatedSponsorRatingView{}

// DesignatedSponsorRatingView struct for DesignatedSponsorRatingView
type DesignatedSponsorRatingView struct {
	Salary *float32 `json:"salary,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewDesignatedSponsorRatingView instantiates a new DesignatedSponsorRatingView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDesignatedSponsorRatingView() *DesignatedSponsorRatingView {
	this := DesignatedSponsorRatingView{}
	return &this
}

// NewDesignatedSponsorRatingViewWithDefaults instantiates a new DesignatedSponsorRatingView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDesignatedSponsorRatingViewWithDefaults() *DesignatedSponsorRatingView {
	this := DesignatedSponsorRatingView{}
	return &this
}

// GetSalary returns the Salary field value if set, zero value otherwise.
func (o *DesignatedSponsorRatingView) GetSalary() float32 {
	if o == nil || IsNil(o.Salary) {
		var ret float32
		return ret
	}
	return *o.Salary
}

// GetSalaryOk returns a tuple with the Salary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesignatedSponsorRatingView) GetSalaryOk() (*float32, bool) {
	if o == nil || IsNil(o.Salary) {
		return nil, false
	}
	return o.Salary, true
}

// HasSalary returns a boolean if a field has been set.
func (o *DesignatedSponsorRatingView) HasSalary() bool {
	if o != nil && !IsNil(o.Salary) {
		return true
	}

	return false
}

// SetSalary gets a reference to the given float32 and assigns it to the Salary field.
func (o *DesignatedSponsorRatingView) SetSalary(v float32) {
	o.Salary = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *DesignatedSponsorRatingView) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesignatedSponsorRatingView) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *DesignatedSponsorRatingView) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *DesignatedSponsorRatingView) SetValue(v string) {
	o.Value = &v
}

func (o DesignatedSponsorRatingView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DesignatedSponsorRatingView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Salary) {
		toSerialize["salary"] = o.Salary
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableDesignatedSponsorRatingView struct {
	value *DesignatedSponsorRatingView
	isSet bool
}

func (v NullableDesignatedSponsorRatingView) Get() *DesignatedSponsorRatingView {
	return v.value
}

func (v *NullableDesignatedSponsorRatingView) Set(val *DesignatedSponsorRatingView) {
	v.value = val
	v.isSet = true
}

func (v NullableDesignatedSponsorRatingView) IsSet() bool {
	return v.isSet
}

func (v *NullableDesignatedSponsorRatingView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDesignatedSponsorRatingView(val *DesignatedSponsorRatingView) *NullableDesignatedSponsorRatingView {
	return &NullableDesignatedSponsorRatingView{value: val, isSet: true}
}

func (v NullableDesignatedSponsorRatingView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDesignatedSponsorRatingView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


