/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the OnlineTrackingView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OnlineTrackingView{}

// OnlineTrackingView struct for OnlineTrackingView
type OnlineTrackingView struct {
	LastSeenDate *int64 `json:"lastSeenDate,omitempty"`
	OnlineMinutes *int64 `json:"onlineMinutes,omitempty"`
}

// NewOnlineTrackingView instantiates a new OnlineTrackingView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnlineTrackingView() *OnlineTrackingView {
	this := OnlineTrackingView{}
	return &this
}

// NewOnlineTrackingViewWithDefaults instantiates a new OnlineTrackingView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnlineTrackingViewWithDefaults() *OnlineTrackingView {
	this := OnlineTrackingView{}
	return &this
}

// GetLastSeenDate returns the LastSeenDate field value if set, zero value otherwise.
func (o *OnlineTrackingView) GetLastSeenDate() int64 {
	if o == nil || IsNil(o.LastSeenDate) {
		var ret int64
		return ret
	}
	return *o.LastSeenDate
}

// GetLastSeenDateOk returns a tuple with the LastSeenDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnlineTrackingView) GetLastSeenDateOk() (*int64, bool) {
	if o == nil || IsNil(o.LastSeenDate) {
		return nil, false
	}
	return o.LastSeenDate, true
}

// HasLastSeenDate returns a boolean if a field has been set.
func (o *OnlineTrackingView) HasLastSeenDate() bool {
	if o != nil && !IsNil(o.LastSeenDate) {
		return true
	}

	return false
}

// SetLastSeenDate gets a reference to the given int64 and assigns it to the LastSeenDate field.
func (o *OnlineTrackingView) SetLastSeenDate(v int64) {
	o.LastSeenDate = &v
}

// GetOnlineMinutes returns the OnlineMinutes field value if set, zero value otherwise.
func (o *OnlineTrackingView) GetOnlineMinutes() int64 {
	if o == nil || IsNil(o.OnlineMinutes) {
		var ret int64
		return ret
	}
	return *o.OnlineMinutes
}

// GetOnlineMinutesOk returns a tuple with the OnlineMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnlineTrackingView) GetOnlineMinutesOk() (*int64, bool) {
	if o == nil || IsNil(o.OnlineMinutes) {
		return nil, false
	}
	return o.OnlineMinutes, true
}

// HasOnlineMinutes returns a boolean if a field has been set.
func (o *OnlineTrackingView) HasOnlineMinutes() bool {
	if o != nil && !IsNil(o.OnlineMinutes) {
		return true
	}

	return false
}

// SetOnlineMinutes gets a reference to the given int64 and assigns it to the OnlineMinutes field.
func (o *OnlineTrackingView) SetOnlineMinutes(v int64) {
	o.OnlineMinutes = &v
}

func (o OnlineTrackingView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OnlineTrackingView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LastSeenDate) {
		toSerialize["lastSeenDate"] = o.LastSeenDate
	}
	if !IsNil(o.OnlineMinutes) {
		toSerialize["onlineMinutes"] = o.OnlineMinutes
	}
	return toSerialize, nil
}

type NullableOnlineTrackingView struct {
	value *OnlineTrackingView
	isSet bool
}

func (v NullableOnlineTrackingView) Get() *OnlineTrackingView {
	return v.value
}

func (v *NullableOnlineTrackingView) Set(val *OnlineTrackingView) {
	v.value = val
	v.isSet = true
}

func (v NullableOnlineTrackingView) IsSet() bool {
	return v.isSet
}

func (v *NullableOnlineTrackingView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnlineTrackingView(val *OnlineTrackingView) *NullableOnlineTrackingView {
	return &NullableOnlineTrackingView{value: val, isSet: true}
}

func (v NullableOnlineTrackingView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnlineTrackingView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


