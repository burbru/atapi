/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the InterestSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterestSummary{}

// InterestSummary struct for InterestSummary
type InterestSummary struct {
	AllianceInterest *AllianceInterest `json:"allianceInterest,omitempty"`
	AuthorInterest *AuthorInterest `json:"authorInterest,omitempty"`
	CommonControversy *Interest `json:"commonControversy,omitempty"`
	CommonGossip *Interest `json:"commonGossip,omitempty"`
	CommonPopularity *Interest `json:"commonPopularity,omitempty"`
	CompanyInterest *CompanyInterest `json:"companyInterest,omitempty"`
	HashTagInterests []HashTagInterest `json:"hashTagInterests,omitempty"`
	InterestSum *Interest `json:"interestSum,omitempty"`
	LocaleInterest *LocaleInterest `json:"localeInterest,omitempty"`
	MeanHashTagInterest *Interest `json:"meanHashTagInterest,omitempty"`
	PostInterest *PostInterest `json:"postInterest,omitempty"`
}

// NewInterestSummary instantiates a new InterestSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterestSummary() *InterestSummary {
	this := InterestSummary{}
	return &this
}

// NewInterestSummaryWithDefaults instantiates a new InterestSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterestSummaryWithDefaults() *InterestSummary {
	this := InterestSummary{}
	return &this
}

// GetAllianceInterest returns the AllianceInterest field value if set, zero value otherwise.
func (o *InterestSummary) GetAllianceInterest() AllianceInterest {
	if o == nil || IsNil(o.AllianceInterest) {
		var ret AllianceInterest
		return ret
	}
	return *o.AllianceInterest
}

// GetAllianceInterestOk returns a tuple with the AllianceInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterestSummary) GetAllianceInterestOk() (*AllianceInterest, bool) {
	if o == nil || IsNil(o.AllianceInterest) {
		return nil, false
	}
	return o.AllianceInterest, true
}

// HasAllianceInterest returns a boolean if a field has been set.
func (o *InterestSummary) HasAllianceInterest() bool {
	if o != nil && !IsNil(o.AllianceInterest) {
		return true
	}

	return false
}

// SetAllianceInterest gets a reference to the given AllianceInterest and assigns it to the AllianceInterest field.
func (o *InterestSummary) SetAllianceInterest(v AllianceInterest) {
	o.AllianceInterest = &v
}

// GetAuthorInterest returns the AuthorInterest field value if set, zero value otherwise.
func (o *InterestSummary) GetAuthorInterest() AuthorInterest {
	if o == nil || IsNil(o.AuthorInterest) {
		var ret AuthorInterest
		return ret
	}
	return *o.AuthorInterest
}

// GetAuthorInterestOk returns a tuple with the AuthorInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterestSummary) GetAuthorInterestOk() (*AuthorInterest, bool) {
	if o == nil || IsNil(o.AuthorInterest) {
		return nil, false
	}
	return o.AuthorInterest, true
}

// HasAuthorInterest returns a boolean if a field has been set.
func (o *InterestSummary) HasAuthorInterest() bool {
	if o != nil && !IsNil(o.AuthorInterest) {
		return true
	}

	return false
}

// SetAuthorInterest gets a reference to the given AuthorInterest and assigns it to the AuthorInterest field.
func (o *InterestSummary) SetAuthorInterest(v AuthorInterest) {
	o.AuthorInterest = &v
}

// GetCommonControversy returns the CommonControversy field value if set, zero value otherwise.
func (o *InterestSummary) GetCommonControversy() Interest {
	if o == nil || IsNil(o.CommonControversy) {
		var ret Interest
		return ret
	}
	return *o.CommonControversy
}

// GetCommonControversyOk returns a tuple with the CommonControversy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterestSummary) GetCommonControversyOk() (*Interest, bool) {
	if o == nil || IsNil(o.CommonControversy) {
		return nil, false
	}
	return o.CommonControversy, true
}

// HasCommonControversy returns a boolean if a field has been set.
func (o *InterestSummary) HasCommonControversy() bool {
	if o != nil && !IsNil(o.CommonControversy) {
		return true
	}

	return false
}

// SetCommonControversy gets a reference to the given Interest and assigns it to the CommonControversy field.
func (o *InterestSummary) SetCommonControversy(v Interest) {
	o.CommonControversy = &v
}

// GetCommonGossip returns the CommonGossip field value if set, zero value otherwise.
func (o *InterestSummary) GetCommonGossip() Interest {
	if o == nil || IsNil(o.CommonGossip) {
		var ret Interest
		return ret
	}
	return *o.CommonGossip
}

// GetCommonGossipOk returns a tuple with the CommonGossip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterestSummary) GetCommonGossipOk() (*Interest, bool) {
	if o == nil || IsNil(o.CommonGossip) {
		return nil, false
	}
	return o.CommonGossip, true
}

// HasCommonGossip returns a boolean if a field has been set.
func (o *InterestSummary) HasCommonGossip() bool {
	if o != nil && !IsNil(o.CommonGossip) {
		return true
	}

	return false
}

// SetCommonGossip gets a reference to the given Interest and assigns it to the CommonGossip field.
func (o *InterestSummary) SetCommonGossip(v Interest) {
	o.CommonGossip = &v
}

// GetCommonPopularity returns the CommonPopularity field value if set, zero value otherwise.
func (o *InterestSummary) GetCommonPopularity() Interest {
	if o == nil || IsNil(o.CommonPopularity) {
		var ret Interest
		return ret
	}
	return *o.CommonPopularity
}

// GetCommonPopularityOk returns a tuple with the CommonPopularity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterestSummary) GetCommonPopularityOk() (*Interest, bool) {
	if o == nil || IsNil(o.CommonPopularity) {
		return nil, false
	}
	return o.CommonPopularity, true
}

// HasCommonPopularity returns a boolean if a field has been set.
func (o *InterestSummary) HasCommonPopularity() bool {
	if o != nil && !IsNil(o.CommonPopularity) {
		return true
	}

	return false
}

// SetCommonPopularity gets a reference to the given Interest and assigns it to the CommonPopularity field.
func (o *InterestSummary) SetCommonPopularity(v Interest) {
	o.CommonPopularity = &v
}

// GetCompanyInterest returns the CompanyInterest field value if set, zero value otherwise.
func (o *InterestSummary) GetCompanyInterest() CompanyInterest {
	if o == nil || IsNil(o.CompanyInterest) {
		var ret CompanyInterest
		return ret
	}
	return *o.CompanyInterest
}

// GetCompanyInterestOk returns a tuple with the CompanyInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterestSummary) GetCompanyInterestOk() (*CompanyInterest, bool) {
	if o == nil || IsNil(o.CompanyInterest) {
		return nil, false
	}
	return o.CompanyInterest, true
}

// HasCompanyInterest returns a boolean if a field has been set.
func (o *InterestSummary) HasCompanyInterest() bool {
	if o != nil && !IsNil(o.CompanyInterest) {
		return true
	}

	return false
}

// SetCompanyInterest gets a reference to the given CompanyInterest and assigns it to the CompanyInterest field.
func (o *InterestSummary) SetCompanyInterest(v CompanyInterest) {
	o.CompanyInterest = &v
}

// GetHashTagInterests returns the HashTagInterests field value if set, zero value otherwise.
func (o *InterestSummary) GetHashTagInterests() []HashTagInterest {
	if o == nil || IsNil(o.HashTagInterests) {
		var ret []HashTagInterest
		return ret
	}
	return o.HashTagInterests
}

// GetHashTagInterestsOk returns a tuple with the HashTagInterests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterestSummary) GetHashTagInterestsOk() ([]HashTagInterest, bool) {
	if o == nil || IsNil(o.HashTagInterests) {
		return nil, false
	}
	return o.HashTagInterests, true
}

// HasHashTagInterests returns a boolean if a field has been set.
func (o *InterestSummary) HasHashTagInterests() bool {
	if o != nil && !IsNil(o.HashTagInterests) {
		return true
	}

	return false
}

// SetHashTagInterests gets a reference to the given []HashTagInterest and assigns it to the HashTagInterests field.
func (o *InterestSummary) SetHashTagInterests(v []HashTagInterest) {
	o.HashTagInterests = v
}

// GetInterestSum returns the InterestSum field value if set, zero value otherwise.
func (o *InterestSummary) GetInterestSum() Interest {
	if o == nil || IsNil(o.InterestSum) {
		var ret Interest
		return ret
	}
	return *o.InterestSum
}

// GetInterestSumOk returns a tuple with the InterestSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterestSummary) GetInterestSumOk() (*Interest, bool) {
	if o == nil || IsNil(o.InterestSum) {
		return nil, false
	}
	return o.InterestSum, true
}

// HasInterestSum returns a boolean if a field has been set.
func (o *InterestSummary) HasInterestSum() bool {
	if o != nil && !IsNil(o.InterestSum) {
		return true
	}

	return false
}

// SetInterestSum gets a reference to the given Interest and assigns it to the InterestSum field.
func (o *InterestSummary) SetInterestSum(v Interest) {
	o.InterestSum = &v
}

// GetLocaleInterest returns the LocaleInterest field value if set, zero value otherwise.
func (o *InterestSummary) GetLocaleInterest() LocaleInterest {
	if o == nil || IsNil(o.LocaleInterest) {
		var ret LocaleInterest
		return ret
	}
	return *o.LocaleInterest
}

// GetLocaleInterestOk returns a tuple with the LocaleInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterestSummary) GetLocaleInterestOk() (*LocaleInterest, bool) {
	if o == nil || IsNil(o.LocaleInterest) {
		return nil, false
	}
	return o.LocaleInterest, true
}

// HasLocaleInterest returns a boolean if a field has been set.
func (o *InterestSummary) HasLocaleInterest() bool {
	if o != nil && !IsNil(o.LocaleInterest) {
		return true
	}

	return false
}

// SetLocaleInterest gets a reference to the given LocaleInterest and assigns it to the LocaleInterest field.
func (o *InterestSummary) SetLocaleInterest(v LocaleInterest) {
	o.LocaleInterest = &v
}

// GetMeanHashTagInterest returns the MeanHashTagInterest field value if set, zero value otherwise.
func (o *InterestSummary) GetMeanHashTagInterest() Interest {
	if o == nil || IsNil(o.MeanHashTagInterest) {
		var ret Interest
		return ret
	}
	return *o.MeanHashTagInterest
}

// GetMeanHashTagInterestOk returns a tuple with the MeanHashTagInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterestSummary) GetMeanHashTagInterestOk() (*Interest, bool) {
	if o == nil || IsNil(o.MeanHashTagInterest) {
		return nil, false
	}
	return o.MeanHashTagInterest, true
}

// HasMeanHashTagInterest returns a boolean if a field has been set.
func (o *InterestSummary) HasMeanHashTagInterest() bool {
	if o != nil && !IsNil(o.MeanHashTagInterest) {
		return true
	}

	return false
}

// SetMeanHashTagInterest gets a reference to the given Interest and assigns it to the MeanHashTagInterest field.
func (o *InterestSummary) SetMeanHashTagInterest(v Interest) {
	o.MeanHashTagInterest = &v
}

// GetPostInterest returns the PostInterest field value if set, zero value otherwise.
func (o *InterestSummary) GetPostInterest() PostInterest {
	if o == nil || IsNil(o.PostInterest) {
		var ret PostInterest
		return ret
	}
	return *o.PostInterest
}

// GetPostInterestOk returns a tuple with the PostInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterestSummary) GetPostInterestOk() (*PostInterest, bool) {
	if o == nil || IsNil(o.PostInterest) {
		return nil, false
	}
	return o.PostInterest, true
}

// HasPostInterest returns a boolean if a field has been set.
func (o *InterestSummary) HasPostInterest() bool {
	if o != nil && !IsNil(o.PostInterest) {
		return true
	}

	return false
}

// SetPostInterest gets a reference to the given PostInterest and assigns it to the PostInterest field.
func (o *InterestSummary) SetPostInterest(v PostInterest) {
	o.PostInterest = &v
}

func (o InterestSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterestSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllianceInterest) {
		toSerialize["allianceInterest"] = o.AllianceInterest
	}
	if !IsNil(o.AuthorInterest) {
		toSerialize["authorInterest"] = o.AuthorInterest
	}
	if !IsNil(o.CommonControversy) {
		toSerialize["commonControversy"] = o.CommonControversy
	}
	if !IsNil(o.CommonGossip) {
		toSerialize["commonGossip"] = o.CommonGossip
	}
	if !IsNil(o.CommonPopularity) {
		toSerialize["commonPopularity"] = o.CommonPopularity
	}
	if !IsNil(o.CompanyInterest) {
		toSerialize["companyInterest"] = o.CompanyInterest
	}
	if !IsNil(o.HashTagInterests) {
		toSerialize["hashTagInterests"] = o.HashTagInterests
	}
	if !IsNil(o.InterestSum) {
		toSerialize["interestSum"] = o.InterestSum
	}
	if !IsNil(o.LocaleInterest) {
		toSerialize["localeInterest"] = o.LocaleInterest
	}
	if !IsNil(o.MeanHashTagInterest) {
		toSerialize["meanHashTagInterest"] = o.MeanHashTagInterest
	}
	if !IsNil(o.PostInterest) {
		toSerialize["postInterest"] = o.PostInterest
	}
	return toSerialize, nil
}

type NullableInterestSummary struct {
	value *InterestSummary
	isSet bool
}

func (v NullableInterestSummary) Get() *InterestSummary {
	return v.value
}

func (v *NullableInterestSummary) Set(val *InterestSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableInterestSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableInterestSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterestSummary(val *InterestSummary) *NullableInterestSummary {
	return &NullableInterestSummary{value: val, isSet: true}
}

func (v NullableInterestSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterestSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


