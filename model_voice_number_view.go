/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the VoiceNumberView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoiceNumberView{}

// VoiceNumberView struct for VoiceNumberView
type VoiceNumberView struct {
	GroupMember *UsernameView `json:"groupMember,omitempty"`
	NumberOfVoices *int64 `json:"numberOfVoices,omitempty"`
}

// NewVoiceNumberView instantiates a new VoiceNumberView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoiceNumberView() *VoiceNumberView {
	this := VoiceNumberView{}
	return &this
}

// NewVoiceNumberViewWithDefaults instantiates a new VoiceNumberView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoiceNumberViewWithDefaults() *VoiceNumberView {
	this := VoiceNumberView{}
	return &this
}

// GetGroupMember returns the GroupMember field value if set, zero value otherwise.
func (o *VoiceNumberView) GetGroupMember() UsernameView {
	if o == nil || IsNil(o.GroupMember) {
		var ret UsernameView
		return ret
	}
	return *o.GroupMember
}

// GetGroupMemberOk returns a tuple with the GroupMember field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceNumberView) GetGroupMemberOk() (*UsernameView, bool) {
	if o == nil || IsNil(o.GroupMember) {
		return nil, false
	}
	return o.GroupMember, true
}

// HasGroupMember returns a boolean if a field has been set.
func (o *VoiceNumberView) HasGroupMember() bool {
	if o != nil && !IsNil(o.GroupMember) {
		return true
	}

	return false
}

// SetGroupMember gets a reference to the given UsernameView and assigns it to the GroupMember field.
func (o *VoiceNumberView) SetGroupMember(v UsernameView) {
	o.GroupMember = &v
}

// GetNumberOfVoices returns the NumberOfVoices field value if set, zero value otherwise.
func (o *VoiceNumberView) GetNumberOfVoices() int64 {
	if o == nil || IsNil(o.NumberOfVoices) {
		var ret int64
		return ret
	}
	return *o.NumberOfVoices
}

// GetNumberOfVoicesOk returns a tuple with the NumberOfVoices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceNumberView) GetNumberOfVoicesOk() (*int64, bool) {
	if o == nil || IsNil(o.NumberOfVoices) {
		return nil, false
	}
	return o.NumberOfVoices, true
}

// HasNumberOfVoices returns a boolean if a field has been set.
func (o *VoiceNumberView) HasNumberOfVoices() bool {
	if o != nil && !IsNil(o.NumberOfVoices) {
		return true
	}

	return false
}

// SetNumberOfVoices gets a reference to the given int64 and assigns it to the NumberOfVoices field.
func (o *VoiceNumberView) SetNumberOfVoices(v int64) {
	o.NumberOfVoices = &v
}

func (o VoiceNumberView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoiceNumberView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GroupMember) {
		toSerialize["groupMember"] = o.GroupMember
	}
	if !IsNil(o.NumberOfVoices) {
		toSerialize["numberOfVoices"] = o.NumberOfVoices
	}
	return toSerialize, nil
}

type NullableVoiceNumberView struct {
	value *VoiceNumberView
	isSet bool
}

func (v NullableVoiceNumberView) Get() *VoiceNumberView {
	return v.value
}

func (v *NullableVoiceNumberView) Set(val *VoiceNumberView) {
	v.value = val
	v.isSet = true
}

func (v NullableVoiceNumberView) IsSet() bool {
	return v.isSet
}

func (v *NullableVoiceNumberView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoiceNumberView(val *VoiceNumberView) *NullableVoiceNumberView {
	return &NullableVoiceNumberView{value: val, isSet: true}
}

func (v NullableVoiceNumberView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoiceNumberView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


