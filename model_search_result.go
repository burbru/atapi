/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the SearchResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchResult{}

// SearchResult struct for SearchResult
type SearchResult struct {
	Bond *BondView `json:"bond,omitempty"`
	Company *CompanyNameView `json:"company,omitempty"`
	Listing *ListingView `json:"listing,omitempty"`
	NaturalIdentifier *string `json:"naturalIdentifier,omitempty"`
	SystemBond *SystemBondView `json:"systemBond,omitempty"`
	UserAccount *UsernameView `json:"userAccount,omitempty"`
}

// NewSearchResult instantiates a new SearchResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchResult() *SearchResult {
	this := SearchResult{}
	return &this
}

// NewSearchResultWithDefaults instantiates a new SearchResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchResultWithDefaults() *SearchResult {
	this := SearchResult{}
	return &this
}

// GetBond returns the Bond field value if set, zero value otherwise.
func (o *SearchResult) GetBond() BondView {
	if o == nil || IsNil(o.Bond) {
		var ret BondView
		return ret
	}
	return *o.Bond
}

// GetBondOk returns a tuple with the Bond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetBondOk() (*BondView, bool) {
	if o == nil || IsNil(o.Bond) {
		return nil, false
	}
	return o.Bond, true
}

// HasBond returns a boolean if a field has been set.
func (o *SearchResult) HasBond() bool {
	if o != nil && !IsNil(o.Bond) {
		return true
	}

	return false
}

// SetBond gets a reference to the given BondView and assigns it to the Bond field.
func (o *SearchResult) SetBond(v BondView) {
	o.Bond = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *SearchResult) GetCompany() CompanyNameView {
	if o == nil || IsNil(o.Company) {
		var ret CompanyNameView
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetCompanyOk() (*CompanyNameView, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *SearchResult) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given CompanyNameView and assigns it to the Company field.
func (o *SearchResult) SetCompany(v CompanyNameView) {
	o.Company = &v
}

// GetListing returns the Listing field value if set, zero value otherwise.
func (o *SearchResult) GetListing() ListingView {
	if o == nil || IsNil(o.Listing) {
		var ret ListingView
		return ret
	}
	return *o.Listing
}

// GetListingOk returns a tuple with the Listing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetListingOk() (*ListingView, bool) {
	if o == nil || IsNil(o.Listing) {
		return nil, false
	}
	return o.Listing, true
}

// HasListing returns a boolean if a field has been set.
func (o *SearchResult) HasListing() bool {
	if o != nil && !IsNil(o.Listing) {
		return true
	}

	return false
}

// SetListing gets a reference to the given ListingView and assigns it to the Listing field.
func (o *SearchResult) SetListing(v ListingView) {
	o.Listing = &v
}

// GetNaturalIdentifier returns the NaturalIdentifier field value if set, zero value otherwise.
func (o *SearchResult) GetNaturalIdentifier() string {
	if o == nil || IsNil(o.NaturalIdentifier) {
		var ret string
		return ret
	}
	return *o.NaturalIdentifier
}

// GetNaturalIdentifierOk returns a tuple with the NaturalIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetNaturalIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.NaturalIdentifier) {
		return nil, false
	}
	return o.NaturalIdentifier, true
}

// HasNaturalIdentifier returns a boolean if a field has been set.
func (o *SearchResult) HasNaturalIdentifier() bool {
	if o != nil && !IsNil(o.NaturalIdentifier) {
		return true
	}

	return false
}

// SetNaturalIdentifier gets a reference to the given string and assigns it to the NaturalIdentifier field.
func (o *SearchResult) SetNaturalIdentifier(v string) {
	o.NaturalIdentifier = &v
}

// GetSystemBond returns the SystemBond field value if set, zero value otherwise.
func (o *SearchResult) GetSystemBond() SystemBondView {
	if o == nil || IsNil(o.SystemBond) {
		var ret SystemBondView
		return ret
	}
	return *o.SystemBond
}

// GetSystemBondOk returns a tuple with the SystemBond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetSystemBondOk() (*SystemBondView, bool) {
	if o == nil || IsNil(o.SystemBond) {
		return nil, false
	}
	return o.SystemBond, true
}

// HasSystemBond returns a boolean if a field has been set.
func (o *SearchResult) HasSystemBond() bool {
	if o != nil && !IsNil(o.SystemBond) {
		return true
	}

	return false
}

// SetSystemBond gets a reference to the given SystemBondView and assigns it to the SystemBond field.
func (o *SearchResult) SetSystemBond(v SystemBondView) {
	o.SystemBond = &v
}

// GetUserAccount returns the UserAccount field value if set, zero value otherwise.
func (o *SearchResult) GetUserAccount() UsernameView {
	if o == nil || IsNil(o.UserAccount) {
		var ret UsernameView
		return ret
	}
	return *o.UserAccount
}

// GetUserAccountOk returns a tuple with the UserAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetUserAccountOk() (*UsernameView, bool) {
	if o == nil || IsNil(o.UserAccount) {
		return nil, false
	}
	return o.UserAccount, true
}

// HasUserAccount returns a boolean if a field has been set.
func (o *SearchResult) HasUserAccount() bool {
	if o != nil && !IsNil(o.UserAccount) {
		return true
	}

	return false
}

// SetUserAccount gets a reference to the given UsernameView and assigns it to the UserAccount field.
func (o *SearchResult) SetUserAccount(v UsernameView) {
	o.UserAccount = &v
}

func (o SearchResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bond) {
		toSerialize["bond"] = o.Bond
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.Listing) {
		toSerialize["listing"] = o.Listing
	}
	if !IsNil(o.NaturalIdentifier) {
		toSerialize["naturalIdentifier"] = o.NaturalIdentifier
	}
	if !IsNil(o.SystemBond) {
		toSerialize["systemBond"] = o.SystemBond
	}
	if !IsNil(o.UserAccount) {
		toSerialize["userAccount"] = o.UserAccount
	}
	return toSerialize, nil
}

type NullableSearchResult struct {
	value *SearchResult
	isSet bool
}

func (v NullableSearchResult) Get() *SearchResult {
	return v.value
}

func (v *NullableSearchResult) Set(val *SearchResult) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchResult) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchResult(val *SearchResult) *NullableSearchResult {
	return &NullableSearchResult{value: val, isSet: true}
}

func (v NullableSearchResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


