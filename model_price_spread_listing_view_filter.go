/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the PriceSpreadListingViewFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceSpreadListingViewFilter{}

// PriceSpreadListingViewFilter struct for PriceSpreadListingViewFilter
type PriceSpreadListingViewFilter struct {
	ListingFilter *Filter `json:"listingFilter,omitempty"`
	Name *string `json:"name,omitempty"`
	SpreadFilter *Filter `json:"spreadFilter,omitempty"`
}

// NewPriceSpreadListingViewFilter instantiates a new PriceSpreadListingViewFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceSpreadListingViewFilter() *PriceSpreadListingViewFilter {
	this := PriceSpreadListingViewFilter{}
	return &this
}

// NewPriceSpreadListingViewFilterWithDefaults instantiates a new PriceSpreadListingViewFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceSpreadListingViewFilterWithDefaults() *PriceSpreadListingViewFilter {
	this := PriceSpreadListingViewFilter{}
	return &this
}

// GetListingFilter returns the ListingFilter field value if set, zero value otherwise.
func (o *PriceSpreadListingViewFilter) GetListingFilter() Filter {
	if o == nil || IsNil(o.ListingFilter) {
		var ret Filter
		return ret
	}
	return *o.ListingFilter
}

// GetListingFilterOk returns a tuple with the ListingFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceSpreadListingViewFilter) GetListingFilterOk() (*Filter, bool) {
	if o == nil || IsNil(o.ListingFilter) {
		return nil, false
	}
	return o.ListingFilter, true
}

// HasListingFilter returns a boolean if a field has been set.
func (o *PriceSpreadListingViewFilter) HasListingFilter() bool {
	if o != nil && !IsNil(o.ListingFilter) {
		return true
	}

	return false
}

// SetListingFilter gets a reference to the given Filter and assigns it to the ListingFilter field.
func (o *PriceSpreadListingViewFilter) SetListingFilter(v Filter) {
	o.ListingFilter = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PriceSpreadListingViewFilter) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceSpreadListingViewFilter) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PriceSpreadListingViewFilter) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PriceSpreadListingViewFilter) SetName(v string) {
	o.Name = &v
}

// GetSpreadFilter returns the SpreadFilter field value if set, zero value otherwise.
func (o *PriceSpreadListingViewFilter) GetSpreadFilter() Filter {
	if o == nil || IsNil(o.SpreadFilter) {
		var ret Filter
		return ret
	}
	return *o.SpreadFilter
}

// GetSpreadFilterOk returns a tuple with the SpreadFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceSpreadListingViewFilter) GetSpreadFilterOk() (*Filter, bool) {
	if o == nil || IsNil(o.SpreadFilter) {
		return nil, false
	}
	return o.SpreadFilter, true
}

// HasSpreadFilter returns a boolean if a field has been set.
func (o *PriceSpreadListingViewFilter) HasSpreadFilter() bool {
	if o != nil && !IsNil(o.SpreadFilter) {
		return true
	}

	return false
}

// SetSpreadFilter gets a reference to the given Filter and assigns it to the SpreadFilter field.
func (o *PriceSpreadListingViewFilter) SetSpreadFilter(v Filter) {
	o.SpreadFilter = &v
}

func (o PriceSpreadListingViewFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceSpreadListingViewFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ListingFilter) {
		toSerialize["listingFilter"] = o.ListingFilter
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SpreadFilter) {
		toSerialize["spreadFilter"] = o.SpreadFilter
	}
	return toSerialize, nil
}

type NullablePriceSpreadListingViewFilter struct {
	value *PriceSpreadListingViewFilter
	isSet bool
}

func (v NullablePriceSpreadListingViewFilter) Get() *PriceSpreadListingViewFilter {
	return v.value
}

func (v *NullablePriceSpreadListingViewFilter) Set(val *PriceSpreadListingViewFilter) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceSpreadListingViewFilter) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceSpreadListingViewFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceSpreadListingViewFilter(val *PriceSpreadListingViewFilter) *NullablePriceSpreadListingViewFilter {
	return &NullablePriceSpreadListingViewFilter{value: val, isSet: true}
}

func (v NullablePriceSpreadListingViewFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceSpreadListingViewFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


