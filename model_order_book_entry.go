/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the OrderBookEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderBookEntry{}

// OrderBookEntry struct for OrderBookEntry
type OrderBookEntry struct {
	Action *string `json:"action,omitempty"`
	PriceLimit *float32 `json:"priceLimit,omitempty"`
	Size *int64 `json:"size,omitempty"`
}

// NewOrderBookEntry instantiates a new OrderBookEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderBookEntry() *OrderBookEntry {
	this := OrderBookEntry{}
	return &this
}

// NewOrderBookEntryWithDefaults instantiates a new OrderBookEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderBookEntryWithDefaults() *OrderBookEntry {
	this := OrderBookEntry{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *OrderBookEntry) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderBookEntry) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *OrderBookEntry) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *OrderBookEntry) SetAction(v string) {
	o.Action = &v
}

// GetPriceLimit returns the PriceLimit field value if set, zero value otherwise.
func (o *OrderBookEntry) GetPriceLimit() float32 {
	if o == nil || IsNil(o.PriceLimit) {
		var ret float32
		return ret
	}
	return *o.PriceLimit
}

// GetPriceLimitOk returns a tuple with the PriceLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderBookEntry) GetPriceLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.PriceLimit) {
		return nil, false
	}
	return o.PriceLimit, true
}

// HasPriceLimit returns a boolean if a field has been set.
func (o *OrderBookEntry) HasPriceLimit() bool {
	if o != nil && !IsNil(o.PriceLimit) {
		return true
	}

	return false
}

// SetPriceLimit gets a reference to the given float32 and assigns it to the PriceLimit field.
func (o *OrderBookEntry) SetPriceLimit(v float32) {
	o.PriceLimit = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *OrderBookEntry) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderBookEntry) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *OrderBookEntry) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *OrderBookEntry) SetSize(v int64) {
	o.Size = &v
}

func (o OrderBookEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderBookEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.PriceLimit) {
		toSerialize["priceLimit"] = o.PriceLimit
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	return toSerialize, nil
}

type NullableOrderBookEntry struct {
	value *OrderBookEntry
	isSet bool
}

func (v NullableOrderBookEntry) Get() *OrderBookEntry {
	return v.value
}

func (v *NullableOrderBookEntry) Set(val *OrderBookEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderBookEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderBookEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderBookEntry(val *OrderBookEntry) *NullableOrderBookEntry {
	return &NullableOrderBookEntry{value: val, isSet: true}
}

func (v NullableOrderBookEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderBookEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


