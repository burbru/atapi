/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the PossibleDailySalaryView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PossibleDailySalaryView{}

// PossibleDailySalaryView struct for PossibleDailySalaryView
type PossibleDailySalaryView struct {
	Value *float32 `json:"value,omitempty"`
}

// NewPossibleDailySalaryView instantiates a new PossibleDailySalaryView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPossibleDailySalaryView() *PossibleDailySalaryView {
	this := PossibleDailySalaryView{}
	return &this
}

// NewPossibleDailySalaryViewWithDefaults instantiates a new PossibleDailySalaryView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPossibleDailySalaryViewWithDefaults() *PossibleDailySalaryView {
	this := PossibleDailySalaryView{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *PossibleDailySalaryView) GetValue() float32 {
	if o == nil || IsNil(o.Value) {
		var ret float32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PossibleDailySalaryView) GetValueOk() (*float32, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *PossibleDailySalaryView) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float32 and assigns it to the Value field.
func (o *PossibleDailySalaryView) SetValue(v float32) {
	o.Value = &v
}

func (o PossibleDailySalaryView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PossibleDailySalaryView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullablePossibleDailySalaryView struct {
	value *PossibleDailySalaryView
	isSet bool
}

func (v NullablePossibleDailySalaryView) Get() *PossibleDailySalaryView {
	return v.value
}

func (v *NullablePossibleDailySalaryView) Set(val *PossibleDailySalaryView) {
	v.value = val
	v.isSet = true
}

func (v NullablePossibleDailySalaryView) IsSet() bool {
	return v.isSet
}

func (v *NullablePossibleDailySalaryView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePossibleDailySalaryView(val *PossibleDailySalaryView) *NullablePossibleDailySalaryView {
	return &NullablePossibleDailySalaryView{value: val, isSet: true}
}

func (v NullablePossibleDailySalaryView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePossibleDailySalaryView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


