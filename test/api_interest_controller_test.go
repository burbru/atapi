/*
Api Documentation

Testing InterestControllerAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package atapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_atapi_InterestControllerAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test InterestControllerAPIService GetAuthorInterestUsingGET", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var userId string

		resp, httpRes, err := apiClient.InterestControllerAPI.GetAuthorInterestUsingGET(context.Background(), userId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test InterestControllerAPIService GetCompanyInterestUsingGET", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var companyId string

		resp, httpRes, err := apiClient.InterestControllerAPI.GetCompanyInterestUsingGET(context.Background(), companyId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test InterestControllerAPIService GetHashTagInterestUsingGET", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var hashTag string

		resp, httpRes, err := apiClient.InterestControllerAPI.GetHashTagInterestUsingGET(context.Background(), hashTag).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test InterestControllerAPIService PutAuthorInterestUsingPUT", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var userId string

		resp, httpRes, err := apiClient.InterestControllerAPI.PutAuthorInterestUsingPUT(context.Background(), userId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test InterestControllerAPIService PutCompanyInterestUsingPUT", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var companyId string

		resp, httpRes, err := apiClient.InterestControllerAPI.PutCompanyInterestUsingPUT(context.Background(), companyId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test InterestControllerAPIService PutHashTagInterestUsingPUT", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var hashTag string

		resp, httpRes, err := apiClient.InterestControllerAPI.PutHashTagInterestUsingPUT(context.Background(), hashTag).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
