/*
Api Documentation

Testing SecurityOrderControllerAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package atapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_atapi_SecurityOrderControllerAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test SecurityOrderControllerAPIService AddOrderUsingPOST", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.SecurityOrderControllerAPI.AddOrderUsingPOST(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecurityOrderControllerAPIService CheckOrderUsingGET", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.SecurityOrderControllerAPI.CheckOrderUsingGET(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecurityOrderControllerAPIService DeleteOrderUsingDELETE", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orderId string

		resp, httpRes, err := apiClient.SecurityOrderControllerAPI.DeleteOrderUsingDELETE(context.Background(), orderId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecurityOrderControllerAPIService DeleteOrdersUsingDELETE", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.SecurityOrderControllerAPI.DeleteOrdersUsingDELETE(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecurityOrderControllerAPIService GetCounterOtcOrdersUsingGET", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var securitiesAccountId string

		resp, httpRes, err := apiClient.SecurityOrderControllerAPI.GetCounterOtcOrdersUsingGET(context.Background(), securitiesAccountId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecurityOrderControllerAPIService GetOrderUsingGET", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orderId string

		resp, httpRes, err := apiClient.SecurityOrderControllerAPI.GetOrderUsingGET(context.Background(), orderId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecurityOrderControllerAPIService GetOrderbookUsingGET", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var securityIdentifier string

		resp, httpRes, err := apiClient.SecurityOrderControllerAPI.GetOrderbookUsingGET(context.Background(), securityIdentifier).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecurityOrderControllerAPIService GetOwnedOrdersUsingGET", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var securitiesAccountId string

		resp, httpRes, err := apiClient.SecurityOrderControllerAPI.GetOwnedOrdersUsingGET(context.Background(), securitiesAccountId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecurityOrderControllerAPIService GetOwnedOrdersV2UsingGET", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.SecurityOrderControllerAPI.GetOwnedOrdersV2UsingGET(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
