/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the SharePositionView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SharePositionView{}

// SharePositionView struct for SharePositionView
type SharePositionView struct {
	AverageBuyingPrice *float32 `json:"averageBuyingPrice,omitempty"`
	Id *string `json:"id,omitempty"`
	LastPrice *float32 `json:"lastPrice,omitempty"`
	LastPriceUpdate *int64 `json:"lastPriceUpdate,omitempty"`
	Listing *ListingView `json:"listing,omitempty"`
	NumberOfShares *int64 `json:"numberOfShares,omitempty"`
	SecuritiesAccount *SecuritiesAccountCompactView `json:"securitiesAccount,omitempty"`
	Version *int64 `json:"version,omitempty"`
}

// NewSharePositionView instantiates a new SharePositionView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSharePositionView() *SharePositionView {
	this := SharePositionView{}
	return &this
}

// NewSharePositionViewWithDefaults instantiates a new SharePositionView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSharePositionViewWithDefaults() *SharePositionView {
	this := SharePositionView{}
	return &this
}

// GetAverageBuyingPrice returns the AverageBuyingPrice field value if set, zero value otherwise.
func (o *SharePositionView) GetAverageBuyingPrice() float32 {
	if o == nil || IsNil(o.AverageBuyingPrice) {
		var ret float32
		return ret
	}
	return *o.AverageBuyingPrice
}

// GetAverageBuyingPriceOk returns a tuple with the AverageBuyingPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharePositionView) GetAverageBuyingPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.AverageBuyingPrice) {
		return nil, false
	}
	return o.AverageBuyingPrice, true
}

// HasAverageBuyingPrice returns a boolean if a field has been set.
func (o *SharePositionView) HasAverageBuyingPrice() bool {
	if o != nil && !IsNil(o.AverageBuyingPrice) {
		return true
	}

	return false
}

// SetAverageBuyingPrice gets a reference to the given float32 and assigns it to the AverageBuyingPrice field.
func (o *SharePositionView) SetAverageBuyingPrice(v float32) {
	o.AverageBuyingPrice = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SharePositionView) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharePositionView) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SharePositionView) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SharePositionView) SetId(v string) {
	o.Id = &v
}

// GetLastPrice returns the LastPrice field value if set, zero value otherwise.
func (o *SharePositionView) GetLastPrice() float32 {
	if o == nil || IsNil(o.LastPrice) {
		var ret float32
		return ret
	}
	return *o.LastPrice
}

// GetLastPriceOk returns a tuple with the LastPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharePositionView) GetLastPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.LastPrice) {
		return nil, false
	}
	return o.LastPrice, true
}

// HasLastPrice returns a boolean if a field has been set.
func (o *SharePositionView) HasLastPrice() bool {
	if o != nil && !IsNil(o.LastPrice) {
		return true
	}

	return false
}

// SetLastPrice gets a reference to the given float32 and assigns it to the LastPrice field.
func (o *SharePositionView) SetLastPrice(v float32) {
	o.LastPrice = &v
}

// GetLastPriceUpdate returns the LastPriceUpdate field value if set, zero value otherwise.
func (o *SharePositionView) GetLastPriceUpdate() int64 {
	if o == nil || IsNil(o.LastPriceUpdate) {
		var ret int64
		return ret
	}
	return *o.LastPriceUpdate
}

// GetLastPriceUpdateOk returns a tuple with the LastPriceUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharePositionView) GetLastPriceUpdateOk() (*int64, bool) {
	if o == nil || IsNil(o.LastPriceUpdate) {
		return nil, false
	}
	return o.LastPriceUpdate, true
}

// HasLastPriceUpdate returns a boolean if a field has been set.
func (o *SharePositionView) HasLastPriceUpdate() bool {
	if o != nil && !IsNil(o.LastPriceUpdate) {
		return true
	}

	return false
}

// SetLastPriceUpdate gets a reference to the given int64 and assigns it to the LastPriceUpdate field.
func (o *SharePositionView) SetLastPriceUpdate(v int64) {
	o.LastPriceUpdate = &v
}

// GetListing returns the Listing field value if set, zero value otherwise.
func (o *SharePositionView) GetListing() ListingView {
	if o == nil || IsNil(o.Listing) {
		var ret ListingView
		return ret
	}
	return *o.Listing
}

// GetListingOk returns a tuple with the Listing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharePositionView) GetListingOk() (*ListingView, bool) {
	if o == nil || IsNil(o.Listing) {
		return nil, false
	}
	return o.Listing, true
}

// HasListing returns a boolean if a field has been set.
func (o *SharePositionView) HasListing() bool {
	if o != nil && !IsNil(o.Listing) {
		return true
	}

	return false
}

// SetListing gets a reference to the given ListingView and assigns it to the Listing field.
func (o *SharePositionView) SetListing(v ListingView) {
	o.Listing = &v
}

// GetNumberOfShares returns the NumberOfShares field value if set, zero value otherwise.
func (o *SharePositionView) GetNumberOfShares() int64 {
	if o == nil || IsNil(o.NumberOfShares) {
		var ret int64
		return ret
	}
	return *o.NumberOfShares
}

// GetNumberOfSharesOk returns a tuple with the NumberOfShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharePositionView) GetNumberOfSharesOk() (*int64, bool) {
	if o == nil || IsNil(o.NumberOfShares) {
		return nil, false
	}
	return o.NumberOfShares, true
}

// HasNumberOfShares returns a boolean if a field has been set.
func (o *SharePositionView) HasNumberOfShares() bool {
	if o != nil && !IsNil(o.NumberOfShares) {
		return true
	}

	return false
}

// SetNumberOfShares gets a reference to the given int64 and assigns it to the NumberOfShares field.
func (o *SharePositionView) SetNumberOfShares(v int64) {
	o.NumberOfShares = &v
}

// GetSecuritiesAccount returns the SecuritiesAccount field value if set, zero value otherwise.
func (o *SharePositionView) GetSecuritiesAccount() SecuritiesAccountCompactView {
	if o == nil || IsNil(o.SecuritiesAccount) {
		var ret SecuritiesAccountCompactView
		return ret
	}
	return *o.SecuritiesAccount
}

// GetSecuritiesAccountOk returns a tuple with the SecuritiesAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharePositionView) GetSecuritiesAccountOk() (*SecuritiesAccountCompactView, bool) {
	if o == nil || IsNil(o.SecuritiesAccount) {
		return nil, false
	}
	return o.SecuritiesAccount, true
}

// HasSecuritiesAccount returns a boolean if a field has been set.
func (o *SharePositionView) HasSecuritiesAccount() bool {
	if o != nil && !IsNil(o.SecuritiesAccount) {
		return true
	}

	return false
}

// SetSecuritiesAccount gets a reference to the given SecuritiesAccountCompactView and assigns it to the SecuritiesAccount field.
func (o *SharePositionView) SetSecuritiesAccount(v SecuritiesAccountCompactView) {
	o.SecuritiesAccount = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *SharePositionView) GetVersion() int64 {
	if o == nil || IsNil(o.Version) {
		var ret int64
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharePositionView) GetVersionOk() (*int64, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *SharePositionView) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int64 and assigns it to the Version field.
func (o *SharePositionView) SetVersion(v int64) {
	o.Version = &v
}

func (o SharePositionView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SharePositionView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AverageBuyingPrice) {
		toSerialize["averageBuyingPrice"] = o.AverageBuyingPrice
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastPrice) {
		toSerialize["lastPrice"] = o.LastPrice
	}
	if !IsNil(o.LastPriceUpdate) {
		toSerialize["lastPriceUpdate"] = o.LastPriceUpdate
	}
	if !IsNil(o.Listing) {
		toSerialize["listing"] = o.Listing
	}
	if !IsNil(o.NumberOfShares) {
		toSerialize["numberOfShares"] = o.NumberOfShares
	}
	if !IsNil(o.SecuritiesAccount) {
		toSerialize["securitiesAccount"] = o.SecuritiesAccount
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableSharePositionView struct {
	value *SharePositionView
	isSet bool
}

func (v NullableSharePositionView) Get() *SharePositionView {
	return v.value
}

func (v *NullableSharePositionView) Set(val *SharePositionView) {
	v.value = val
	v.isSet = true
}

func (v NullableSharePositionView) IsSet() bool {
	return v.isSet
}

func (v *NullableSharePositionView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSharePositionView(val *SharePositionView) *NullableSharePositionView {
	return &NullableSharePositionView{value: val, isSet: true}
}

func (v NullableSharePositionView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSharePositionView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


