/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the OrderBook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderBook{}

// OrderBook struct for OrderBook
type OrderBook struct {
	BuyEntries []OrderBookEntry `json:"buyEntries,omitempty"`
	MaxBuySize *int64 `json:"maxBuySize,omitempty"`
	MaxSellSize *int64 `json:"maxSellSize,omitempty"`
	SellEntries []OrderBookEntry `json:"sellEntries,omitempty"`
}

// NewOrderBook instantiates a new OrderBook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderBook() *OrderBook {
	this := OrderBook{}
	return &this
}

// NewOrderBookWithDefaults instantiates a new OrderBook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderBookWithDefaults() *OrderBook {
	this := OrderBook{}
	return &this
}

// GetBuyEntries returns the BuyEntries field value if set, zero value otherwise.
func (o *OrderBook) GetBuyEntries() []OrderBookEntry {
	if o == nil || IsNil(o.BuyEntries) {
		var ret []OrderBookEntry
		return ret
	}
	return o.BuyEntries
}

// GetBuyEntriesOk returns a tuple with the BuyEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderBook) GetBuyEntriesOk() ([]OrderBookEntry, bool) {
	if o == nil || IsNil(o.BuyEntries) {
		return nil, false
	}
	return o.BuyEntries, true
}

// HasBuyEntries returns a boolean if a field has been set.
func (o *OrderBook) HasBuyEntries() bool {
	if o != nil && !IsNil(o.BuyEntries) {
		return true
	}

	return false
}

// SetBuyEntries gets a reference to the given []OrderBookEntry and assigns it to the BuyEntries field.
func (o *OrderBook) SetBuyEntries(v []OrderBookEntry) {
	o.BuyEntries = v
}

// GetMaxBuySize returns the MaxBuySize field value if set, zero value otherwise.
func (o *OrderBook) GetMaxBuySize() int64 {
	if o == nil || IsNil(o.MaxBuySize) {
		var ret int64
		return ret
	}
	return *o.MaxBuySize
}

// GetMaxBuySizeOk returns a tuple with the MaxBuySize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderBook) GetMaxBuySizeOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxBuySize) {
		return nil, false
	}
	return o.MaxBuySize, true
}

// HasMaxBuySize returns a boolean if a field has been set.
func (o *OrderBook) HasMaxBuySize() bool {
	if o != nil && !IsNil(o.MaxBuySize) {
		return true
	}

	return false
}

// SetMaxBuySize gets a reference to the given int64 and assigns it to the MaxBuySize field.
func (o *OrderBook) SetMaxBuySize(v int64) {
	o.MaxBuySize = &v
}

// GetMaxSellSize returns the MaxSellSize field value if set, zero value otherwise.
func (o *OrderBook) GetMaxSellSize() int64 {
	if o == nil || IsNil(o.MaxSellSize) {
		var ret int64
		return ret
	}
	return *o.MaxSellSize
}

// GetMaxSellSizeOk returns a tuple with the MaxSellSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderBook) GetMaxSellSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxSellSize) {
		return nil, false
	}
	return o.MaxSellSize, true
}

// HasMaxSellSize returns a boolean if a field has been set.
func (o *OrderBook) HasMaxSellSize() bool {
	if o != nil && !IsNil(o.MaxSellSize) {
		return true
	}

	return false
}

// SetMaxSellSize gets a reference to the given int64 and assigns it to the MaxSellSize field.
func (o *OrderBook) SetMaxSellSize(v int64) {
	o.MaxSellSize = &v
}

// GetSellEntries returns the SellEntries field value if set, zero value otherwise.
func (o *OrderBook) GetSellEntries() []OrderBookEntry {
	if o == nil || IsNil(o.SellEntries) {
		var ret []OrderBookEntry
		return ret
	}
	return o.SellEntries
}

// GetSellEntriesOk returns a tuple with the SellEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderBook) GetSellEntriesOk() ([]OrderBookEntry, bool) {
	if o == nil || IsNil(o.SellEntries) {
		return nil, false
	}
	return o.SellEntries, true
}

// HasSellEntries returns a boolean if a field has been set.
func (o *OrderBook) HasSellEntries() bool {
	if o != nil && !IsNil(o.SellEntries) {
		return true
	}

	return false
}

// SetSellEntries gets a reference to the given []OrderBookEntry and assigns it to the SellEntries field.
func (o *OrderBook) SetSellEntries(v []OrderBookEntry) {
	o.SellEntries = v
}

func (o OrderBook) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderBook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuyEntries) {
		toSerialize["buyEntries"] = o.BuyEntries
	}
	if !IsNil(o.MaxBuySize) {
		toSerialize["maxBuySize"] = o.MaxBuySize
	}
	if !IsNil(o.MaxSellSize) {
		toSerialize["maxSellSize"] = o.MaxSellSize
	}
	if !IsNil(o.SellEntries) {
		toSerialize["sellEntries"] = o.SellEntries
	}
	return toSerialize, nil
}

type NullableOrderBook struct {
	value *OrderBook
	isSet bool
}

func (v NullableOrderBook) Get() *OrderBook {
	return v.value
}

func (v *NullableOrderBook) Set(val *OrderBook) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderBook) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderBook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderBook(val *OrderBook) *NullableOrderBook {
	return &NullableOrderBook{value: val, isSet: true}
}

func (v NullableOrderBook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderBook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


