/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the PriceSpreadListingFilterDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceSpreadListingFilterDefinition{}

// PriceSpreadListingFilterDefinition struct for PriceSpreadListingFilterDefinition
type PriceSpreadListingFilterDefinition struct {
	ListingFilterDefinition *ListingFilterDefinition `json:"listingFilterDefinition,omitempty"`
	Name *string `json:"name,omitempty"`
	SpreadFilterDefinition *SpreadFilterDefinition `json:"spreadFilterDefinition,omitempty"`
}

// NewPriceSpreadListingFilterDefinition instantiates a new PriceSpreadListingFilterDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceSpreadListingFilterDefinition() *PriceSpreadListingFilterDefinition {
	this := PriceSpreadListingFilterDefinition{}
	return &this
}

// NewPriceSpreadListingFilterDefinitionWithDefaults instantiates a new PriceSpreadListingFilterDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceSpreadListingFilterDefinitionWithDefaults() *PriceSpreadListingFilterDefinition {
	this := PriceSpreadListingFilterDefinition{}
	return &this
}

// GetListingFilterDefinition returns the ListingFilterDefinition field value if set, zero value otherwise.
func (o *PriceSpreadListingFilterDefinition) GetListingFilterDefinition() ListingFilterDefinition {
	if o == nil || IsNil(o.ListingFilterDefinition) {
		var ret ListingFilterDefinition
		return ret
	}
	return *o.ListingFilterDefinition
}

// GetListingFilterDefinitionOk returns a tuple with the ListingFilterDefinition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceSpreadListingFilterDefinition) GetListingFilterDefinitionOk() (*ListingFilterDefinition, bool) {
	if o == nil || IsNil(o.ListingFilterDefinition) {
		return nil, false
	}
	return o.ListingFilterDefinition, true
}

// HasListingFilterDefinition returns a boolean if a field has been set.
func (o *PriceSpreadListingFilterDefinition) HasListingFilterDefinition() bool {
	if o != nil && !IsNil(o.ListingFilterDefinition) {
		return true
	}

	return false
}

// SetListingFilterDefinition gets a reference to the given ListingFilterDefinition and assigns it to the ListingFilterDefinition field.
func (o *PriceSpreadListingFilterDefinition) SetListingFilterDefinition(v ListingFilterDefinition) {
	o.ListingFilterDefinition = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PriceSpreadListingFilterDefinition) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceSpreadListingFilterDefinition) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PriceSpreadListingFilterDefinition) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PriceSpreadListingFilterDefinition) SetName(v string) {
	o.Name = &v
}

// GetSpreadFilterDefinition returns the SpreadFilterDefinition field value if set, zero value otherwise.
func (o *PriceSpreadListingFilterDefinition) GetSpreadFilterDefinition() SpreadFilterDefinition {
	if o == nil || IsNil(o.SpreadFilterDefinition) {
		var ret SpreadFilterDefinition
		return ret
	}
	return *o.SpreadFilterDefinition
}

// GetSpreadFilterDefinitionOk returns a tuple with the SpreadFilterDefinition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceSpreadListingFilterDefinition) GetSpreadFilterDefinitionOk() (*SpreadFilterDefinition, bool) {
	if o == nil || IsNil(o.SpreadFilterDefinition) {
		return nil, false
	}
	return o.SpreadFilterDefinition, true
}

// HasSpreadFilterDefinition returns a boolean if a field has been set.
func (o *PriceSpreadListingFilterDefinition) HasSpreadFilterDefinition() bool {
	if o != nil && !IsNil(o.SpreadFilterDefinition) {
		return true
	}

	return false
}

// SetSpreadFilterDefinition gets a reference to the given SpreadFilterDefinition and assigns it to the SpreadFilterDefinition field.
func (o *PriceSpreadListingFilterDefinition) SetSpreadFilterDefinition(v SpreadFilterDefinition) {
	o.SpreadFilterDefinition = &v
}

func (o PriceSpreadListingFilterDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceSpreadListingFilterDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ListingFilterDefinition) {
		toSerialize["listingFilterDefinition"] = o.ListingFilterDefinition
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SpreadFilterDefinition) {
		toSerialize["spreadFilterDefinition"] = o.SpreadFilterDefinition
	}
	return toSerialize, nil
}

type NullablePriceSpreadListingFilterDefinition struct {
	value *PriceSpreadListingFilterDefinition
	isSet bool
}

func (v NullablePriceSpreadListingFilterDefinition) Get() *PriceSpreadListingFilterDefinition {
	return v.value
}

func (v *NullablePriceSpreadListingFilterDefinition) Set(val *PriceSpreadListingFilterDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceSpreadListingFilterDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceSpreadListingFilterDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceSpreadListingFilterDefinition(val *PriceSpreadListingFilterDefinition) *NullablePriceSpreadListingFilterDefinition {
	return &NullablePriceSpreadListingFilterDefinition{value: val, isSet: true}
}

func (v NullablePriceSpreadListingFilterDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceSpreadListingFilterDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


