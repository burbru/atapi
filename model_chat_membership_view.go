/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the ChatMembershipView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatMembershipView{}

// ChatMembershipView struct for ChatMembershipView
type ChatMembershipView struct {
	ChatId *string `json:"chatId,omitempty"`
	Id *string `json:"id,omitempty"`
	Member *UsernameView `json:"member,omitempty"`
	Online *bool `json:"online,omitempty"`
	Role *string `json:"role,omitempty"`
	Version *int64 `json:"version,omitempty"`
}

// NewChatMembershipView instantiates a new ChatMembershipView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatMembershipView() *ChatMembershipView {
	this := ChatMembershipView{}
	return &this
}

// NewChatMembershipViewWithDefaults instantiates a new ChatMembershipView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatMembershipViewWithDefaults() *ChatMembershipView {
	this := ChatMembershipView{}
	return &this
}

// GetChatId returns the ChatId field value if set, zero value otherwise.
func (o *ChatMembershipView) GetChatId() string {
	if o == nil || IsNil(o.ChatId) {
		var ret string
		return ret
	}
	return *o.ChatId
}

// GetChatIdOk returns a tuple with the ChatId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatMembershipView) GetChatIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChatId) {
		return nil, false
	}
	return o.ChatId, true
}

// HasChatId returns a boolean if a field has been set.
func (o *ChatMembershipView) HasChatId() bool {
	if o != nil && !IsNil(o.ChatId) {
		return true
	}

	return false
}

// SetChatId gets a reference to the given string and assigns it to the ChatId field.
func (o *ChatMembershipView) SetChatId(v string) {
	o.ChatId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ChatMembershipView) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatMembershipView) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ChatMembershipView) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ChatMembershipView) SetId(v string) {
	o.Id = &v
}

// GetMember returns the Member field value if set, zero value otherwise.
func (o *ChatMembershipView) GetMember() UsernameView {
	if o == nil || IsNil(o.Member) {
		var ret UsernameView
		return ret
	}
	return *o.Member
}

// GetMemberOk returns a tuple with the Member field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatMembershipView) GetMemberOk() (*UsernameView, bool) {
	if o == nil || IsNil(o.Member) {
		return nil, false
	}
	return o.Member, true
}

// HasMember returns a boolean if a field has been set.
func (o *ChatMembershipView) HasMember() bool {
	if o != nil && !IsNil(o.Member) {
		return true
	}

	return false
}

// SetMember gets a reference to the given UsernameView and assigns it to the Member field.
func (o *ChatMembershipView) SetMember(v UsernameView) {
	o.Member = &v
}

// GetOnline returns the Online field value if set, zero value otherwise.
func (o *ChatMembershipView) GetOnline() bool {
	if o == nil || IsNil(o.Online) {
		var ret bool
		return ret
	}
	return *o.Online
}

// GetOnlineOk returns a tuple with the Online field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatMembershipView) GetOnlineOk() (*bool, bool) {
	if o == nil || IsNil(o.Online) {
		return nil, false
	}
	return o.Online, true
}

// HasOnline returns a boolean if a field has been set.
func (o *ChatMembershipView) HasOnline() bool {
	if o != nil && !IsNil(o.Online) {
		return true
	}

	return false
}

// SetOnline gets a reference to the given bool and assigns it to the Online field.
func (o *ChatMembershipView) SetOnline(v bool) {
	o.Online = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *ChatMembershipView) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatMembershipView) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *ChatMembershipView) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *ChatMembershipView) SetRole(v string) {
	o.Role = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ChatMembershipView) GetVersion() int64 {
	if o == nil || IsNil(o.Version) {
		var ret int64
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatMembershipView) GetVersionOk() (*int64, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ChatMembershipView) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int64 and assigns it to the Version field.
func (o *ChatMembershipView) SetVersion(v int64) {
	o.Version = &v
}

func (o ChatMembershipView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatMembershipView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChatId) {
		toSerialize["chatId"] = o.ChatId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Member) {
		toSerialize["member"] = o.Member
	}
	if !IsNil(o.Online) {
		toSerialize["online"] = o.Online
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableChatMembershipView struct {
	value *ChatMembershipView
	isSet bool
}

func (v NullableChatMembershipView) Get() *ChatMembershipView {
	return v.value
}

func (v *NullableChatMembershipView) Set(val *ChatMembershipView) {
	v.value = val
	v.isSet = true
}

func (v NullableChatMembershipView) IsSet() bool {
	return v.isSet
}

func (v *NullableChatMembershipView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatMembershipView(val *ChatMembershipView) *NullableChatMembershipView {
	return &NullableChatMembershipView{value: val, isSet: true}
}

func (v NullableChatMembershipView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatMembershipView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


