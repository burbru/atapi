/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the PortfolioPositionView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortfolioPositionView{}

// PortfolioPositionView struct for PortfolioPositionView
type PortfolioPositionView struct {
	AverageBuyingPrice *float32 `json:"averageBuyingPrice,omitempty"`
	CommittedShares *int64 `json:"committedShares,omitempty"`
	CurrentAskPrice *float32 `json:"currentAskPrice,omitempty"`
	CurrentAskSize *int64 `json:"currentAskSize,omitempty"`
	CurrentBidPrice *float32 `json:"currentBidPrice,omitempty"`
	CurrentBidSize *int64 `json:"currentBidSize,omitempty"`
	LastBuyingPrice *float32 `json:"lastBuyingPrice,omitempty"`
	LastPrice *FixedIncomeEnabledSecurityPriceView `json:"lastPrice,omitempty"`
	LastPriceUpdate *int64 `json:"lastPriceUpdate,omitempty"`
	Listing *ListingView `json:"listing,omitempty"`
	NumberOfShares *int64 `json:"numberOfShares,omitempty"`
	SecurityIdentifier *string `json:"securityIdentifier,omitempty"`
	Type *string `json:"type,omitempty"`
	Volume *float32 `json:"volume,omitempty"`
}

// NewPortfolioPositionView instantiates a new PortfolioPositionView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortfolioPositionView() *PortfolioPositionView {
	this := PortfolioPositionView{}
	return &this
}

// NewPortfolioPositionViewWithDefaults instantiates a new PortfolioPositionView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortfolioPositionViewWithDefaults() *PortfolioPositionView {
	this := PortfolioPositionView{}
	return &this
}

// GetAverageBuyingPrice returns the AverageBuyingPrice field value if set, zero value otherwise.
func (o *PortfolioPositionView) GetAverageBuyingPrice() float32 {
	if o == nil || IsNil(o.AverageBuyingPrice) {
		var ret float32
		return ret
	}
	return *o.AverageBuyingPrice
}

// GetAverageBuyingPriceOk returns a tuple with the AverageBuyingPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioPositionView) GetAverageBuyingPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.AverageBuyingPrice) {
		return nil, false
	}
	return o.AverageBuyingPrice, true
}

// HasAverageBuyingPrice returns a boolean if a field has been set.
func (o *PortfolioPositionView) HasAverageBuyingPrice() bool {
	if o != nil && !IsNil(o.AverageBuyingPrice) {
		return true
	}

	return false
}

// SetAverageBuyingPrice gets a reference to the given float32 and assigns it to the AverageBuyingPrice field.
func (o *PortfolioPositionView) SetAverageBuyingPrice(v float32) {
	o.AverageBuyingPrice = &v
}

// GetCommittedShares returns the CommittedShares field value if set, zero value otherwise.
func (o *PortfolioPositionView) GetCommittedShares() int64 {
	if o == nil || IsNil(o.CommittedShares) {
		var ret int64
		return ret
	}
	return *o.CommittedShares
}

// GetCommittedSharesOk returns a tuple with the CommittedShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioPositionView) GetCommittedSharesOk() (*int64, bool) {
	if o == nil || IsNil(o.CommittedShares) {
		return nil, false
	}
	return o.CommittedShares, true
}

// HasCommittedShares returns a boolean if a field has been set.
func (o *PortfolioPositionView) HasCommittedShares() bool {
	if o != nil && !IsNil(o.CommittedShares) {
		return true
	}

	return false
}

// SetCommittedShares gets a reference to the given int64 and assigns it to the CommittedShares field.
func (o *PortfolioPositionView) SetCommittedShares(v int64) {
	o.CommittedShares = &v
}

// GetCurrentAskPrice returns the CurrentAskPrice field value if set, zero value otherwise.
func (o *PortfolioPositionView) GetCurrentAskPrice() float32 {
	if o == nil || IsNil(o.CurrentAskPrice) {
		var ret float32
		return ret
	}
	return *o.CurrentAskPrice
}

// GetCurrentAskPriceOk returns a tuple with the CurrentAskPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioPositionView) GetCurrentAskPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.CurrentAskPrice) {
		return nil, false
	}
	return o.CurrentAskPrice, true
}

// HasCurrentAskPrice returns a boolean if a field has been set.
func (o *PortfolioPositionView) HasCurrentAskPrice() bool {
	if o != nil && !IsNil(o.CurrentAskPrice) {
		return true
	}

	return false
}

// SetCurrentAskPrice gets a reference to the given float32 and assigns it to the CurrentAskPrice field.
func (o *PortfolioPositionView) SetCurrentAskPrice(v float32) {
	o.CurrentAskPrice = &v
}

// GetCurrentAskSize returns the CurrentAskSize field value if set, zero value otherwise.
func (o *PortfolioPositionView) GetCurrentAskSize() int64 {
	if o == nil || IsNil(o.CurrentAskSize) {
		var ret int64
		return ret
	}
	return *o.CurrentAskSize
}

// GetCurrentAskSizeOk returns a tuple with the CurrentAskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioPositionView) GetCurrentAskSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.CurrentAskSize) {
		return nil, false
	}
	return o.CurrentAskSize, true
}

// HasCurrentAskSize returns a boolean if a field has been set.
func (o *PortfolioPositionView) HasCurrentAskSize() bool {
	if o != nil && !IsNil(o.CurrentAskSize) {
		return true
	}

	return false
}

// SetCurrentAskSize gets a reference to the given int64 and assigns it to the CurrentAskSize field.
func (o *PortfolioPositionView) SetCurrentAskSize(v int64) {
	o.CurrentAskSize = &v
}

// GetCurrentBidPrice returns the CurrentBidPrice field value if set, zero value otherwise.
func (o *PortfolioPositionView) GetCurrentBidPrice() float32 {
	if o == nil || IsNil(o.CurrentBidPrice) {
		var ret float32
		return ret
	}
	return *o.CurrentBidPrice
}

// GetCurrentBidPriceOk returns a tuple with the CurrentBidPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioPositionView) GetCurrentBidPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.CurrentBidPrice) {
		return nil, false
	}
	return o.CurrentBidPrice, true
}

// HasCurrentBidPrice returns a boolean if a field has been set.
func (o *PortfolioPositionView) HasCurrentBidPrice() bool {
	if o != nil && !IsNil(o.CurrentBidPrice) {
		return true
	}

	return false
}

// SetCurrentBidPrice gets a reference to the given float32 and assigns it to the CurrentBidPrice field.
func (o *PortfolioPositionView) SetCurrentBidPrice(v float32) {
	o.CurrentBidPrice = &v
}

// GetCurrentBidSize returns the CurrentBidSize field value if set, zero value otherwise.
func (o *PortfolioPositionView) GetCurrentBidSize() int64 {
	if o == nil || IsNil(o.CurrentBidSize) {
		var ret int64
		return ret
	}
	return *o.CurrentBidSize
}

// GetCurrentBidSizeOk returns a tuple with the CurrentBidSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioPositionView) GetCurrentBidSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.CurrentBidSize) {
		return nil, false
	}
	return o.CurrentBidSize, true
}

// HasCurrentBidSize returns a boolean if a field has been set.
func (o *PortfolioPositionView) HasCurrentBidSize() bool {
	if o != nil && !IsNil(o.CurrentBidSize) {
		return true
	}

	return false
}

// SetCurrentBidSize gets a reference to the given int64 and assigns it to the CurrentBidSize field.
func (o *PortfolioPositionView) SetCurrentBidSize(v int64) {
	o.CurrentBidSize = &v
}

// GetLastBuyingPrice returns the LastBuyingPrice field value if set, zero value otherwise.
func (o *PortfolioPositionView) GetLastBuyingPrice() float32 {
	if o == nil || IsNil(o.LastBuyingPrice) {
		var ret float32
		return ret
	}
	return *o.LastBuyingPrice
}

// GetLastBuyingPriceOk returns a tuple with the LastBuyingPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioPositionView) GetLastBuyingPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.LastBuyingPrice) {
		return nil, false
	}
	return o.LastBuyingPrice, true
}

// HasLastBuyingPrice returns a boolean if a field has been set.
func (o *PortfolioPositionView) HasLastBuyingPrice() bool {
	if o != nil && !IsNil(o.LastBuyingPrice) {
		return true
	}

	return false
}

// SetLastBuyingPrice gets a reference to the given float32 and assigns it to the LastBuyingPrice field.
func (o *PortfolioPositionView) SetLastBuyingPrice(v float32) {
	o.LastBuyingPrice = &v
}

// GetLastPrice returns the LastPrice field value if set, zero value otherwise.
func (o *PortfolioPositionView) GetLastPrice() FixedIncomeEnabledSecurityPriceView {
	if o == nil || IsNil(o.LastPrice) {
		var ret FixedIncomeEnabledSecurityPriceView
		return ret
	}
	return *o.LastPrice
}

// GetLastPriceOk returns a tuple with the LastPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioPositionView) GetLastPriceOk() (*FixedIncomeEnabledSecurityPriceView, bool) {
	if o == nil || IsNil(o.LastPrice) {
		return nil, false
	}
	return o.LastPrice, true
}

// HasLastPrice returns a boolean if a field has been set.
func (o *PortfolioPositionView) HasLastPrice() bool {
	if o != nil && !IsNil(o.LastPrice) {
		return true
	}

	return false
}

// SetLastPrice gets a reference to the given FixedIncomeEnabledSecurityPriceView and assigns it to the LastPrice field.
func (o *PortfolioPositionView) SetLastPrice(v FixedIncomeEnabledSecurityPriceView) {
	o.LastPrice = &v
}

// GetLastPriceUpdate returns the LastPriceUpdate field value if set, zero value otherwise.
func (o *PortfolioPositionView) GetLastPriceUpdate() int64 {
	if o == nil || IsNil(o.LastPriceUpdate) {
		var ret int64
		return ret
	}
	return *o.LastPriceUpdate
}

// GetLastPriceUpdateOk returns a tuple with the LastPriceUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioPositionView) GetLastPriceUpdateOk() (*int64, bool) {
	if o == nil || IsNil(o.LastPriceUpdate) {
		return nil, false
	}
	return o.LastPriceUpdate, true
}

// HasLastPriceUpdate returns a boolean if a field has been set.
func (o *PortfolioPositionView) HasLastPriceUpdate() bool {
	if o != nil && !IsNil(o.LastPriceUpdate) {
		return true
	}

	return false
}

// SetLastPriceUpdate gets a reference to the given int64 and assigns it to the LastPriceUpdate field.
func (o *PortfolioPositionView) SetLastPriceUpdate(v int64) {
	o.LastPriceUpdate = &v
}

// GetListing returns the Listing field value if set, zero value otherwise.
func (o *PortfolioPositionView) GetListing() ListingView {
	if o == nil || IsNil(o.Listing) {
		var ret ListingView
		return ret
	}
	return *o.Listing
}

// GetListingOk returns a tuple with the Listing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioPositionView) GetListingOk() (*ListingView, bool) {
	if o == nil || IsNil(o.Listing) {
		return nil, false
	}
	return o.Listing, true
}

// HasListing returns a boolean if a field has been set.
func (o *PortfolioPositionView) HasListing() bool {
	if o != nil && !IsNil(o.Listing) {
		return true
	}

	return false
}

// SetListing gets a reference to the given ListingView and assigns it to the Listing field.
func (o *PortfolioPositionView) SetListing(v ListingView) {
	o.Listing = &v
}

// GetNumberOfShares returns the NumberOfShares field value if set, zero value otherwise.
func (o *PortfolioPositionView) GetNumberOfShares() int64 {
	if o == nil || IsNil(o.NumberOfShares) {
		var ret int64
		return ret
	}
	return *o.NumberOfShares
}

// GetNumberOfSharesOk returns a tuple with the NumberOfShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioPositionView) GetNumberOfSharesOk() (*int64, bool) {
	if o == nil || IsNil(o.NumberOfShares) {
		return nil, false
	}
	return o.NumberOfShares, true
}

// HasNumberOfShares returns a boolean if a field has been set.
func (o *PortfolioPositionView) HasNumberOfShares() bool {
	if o != nil && !IsNil(o.NumberOfShares) {
		return true
	}

	return false
}

// SetNumberOfShares gets a reference to the given int64 and assigns it to the NumberOfShares field.
func (o *PortfolioPositionView) SetNumberOfShares(v int64) {
	o.NumberOfShares = &v
}

// GetSecurityIdentifier returns the SecurityIdentifier field value if set, zero value otherwise.
func (o *PortfolioPositionView) GetSecurityIdentifier() string {
	if o == nil || IsNil(o.SecurityIdentifier) {
		var ret string
		return ret
	}
	return *o.SecurityIdentifier
}

// GetSecurityIdentifierOk returns a tuple with the SecurityIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioPositionView) GetSecurityIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityIdentifier) {
		return nil, false
	}
	return o.SecurityIdentifier, true
}

// HasSecurityIdentifier returns a boolean if a field has been set.
func (o *PortfolioPositionView) HasSecurityIdentifier() bool {
	if o != nil && !IsNil(o.SecurityIdentifier) {
		return true
	}

	return false
}

// SetSecurityIdentifier gets a reference to the given string and assigns it to the SecurityIdentifier field.
func (o *PortfolioPositionView) SetSecurityIdentifier(v string) {
	o.SecurityIdentifier = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PortfolioPositionView) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioPositionView) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PortfolioPositionView) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PortfolioPositionView) SetType(v string) {
	o.Type = &v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *PortfolioPositionView) GetVolume() float32 {
	if o == nil || IsNil(o.Volume) {
		var ret float32
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioPositionView) GetVolumeOk() (*float32, bool) {
	if o == nil || IsNil(o.Volume) {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *PortfolioPositionView) HasVolume() bool {
	if o != nil && !IsNil(o.Volume) {
		return true
	}

	return false
}

// SetVolume gets a reference to the given float32 and assigns it to the Volume field.
func (o *PortfolioPositionView) SetVolume(v float32) {
	o.Volume = &v
}

func (o PortfolioPositionView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortfolioPositionView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AverageBuyingPrice) {
		toSerialize["averageBuyingPrice"] = o.AverageBuyingPrice
	}
	if !IsNil(o.CommittedShares) {
		toSerialize["committedShares"] = o.CommittedShares
	}
	if !IsNil(o.CurrentAskPrice) {
		toSerialize["currentAskPrice"] = o.CurrentAskPrice
	}
	if !IsNil(o.CurrentAskSize) {
		toSerialize["currentAskSize"] = o.CurrentAskSize
	}
	if !IsNil(o.CurrentBidPrice) {
		toSerialize["currentBidPrice"] = o.CurrentBidPrice
	}
	if !IsNil(o.CurrentBidSize) {
		toSerialize["currentBidSize"] = o.CurrentBidSize
	}
	if !IsNil(o.LastBuyingPrice) {
		toSerialize["lastBuyingPrice"] = o.LastBuyingPrice
	}
	if !IsNil(o.LastPrice) {
		toSerialize["lastPrice"] = o.LastPrice
	}
	if !IsNil(o.LastPriceUpdate) {
		toSerialize["lastPriceUpdate"] = o.LastPriceUpdate
	}
	if !IsNil(o.Listing) {
		toSerialize["listing"] = o.Listing
	}
	if !IsNil(o.NumberOfShares) {
		toSerialize["numberOfShares"] = o.NumberOfShares
	}
	if !IsNil(o.SecurityIdentifier) {
		toSerialize["securityIdentifier"] = o.SecurityIdentifier
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Volume) {
		toSerialize["volume"] = o.Volume
	}
	return toSerialize, nil
}

type NullablePortfolioPositionView struct {
	value *PortfolioPositionView
	isSet bool
}

func (v NullablePortfolioPositionView) Get() *PortfolioPositionView {
	return v.value
}

func (v *NullablePortfolioPositionView) Set(val *PortfolioPositionView) {
	v.value = val
	v.isSet = true
}

func (v NullablePortfolioPositionView) IsSet() bool {
	return v.isSet
}

func (v *NullablePortfolioPositionView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortfolioPositionView(val *PortfolioPositionView) *NullablePortfolioPositionView {
	return &NullablePortfolioPositionView{value: val, isSet: true}
}

func (v NullablePortfolioPositionView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortfolioPositionView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


