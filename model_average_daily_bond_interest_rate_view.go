/*
Api Documentation

Api Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package atapi

import (
	"encoding/json"
)

// checks if the AverageDailyBondInterestRateView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AverageDailyBondInterestRateView{}

// AverageDailyBondInterestRateView struct for AverageDailyBondInterestRateView
type AverageDailyBondInterestRateView struct {
	Date *int64 `json:"date,omitempty"`
	Value *float32 `json:"value,omitempty"`
}

// NewAverageDailyBondInterestRateView instantiates a new AverageDailyBondInterestRateView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAverageDailyBondInterestRateView() *AverageDailyBondInterestRateView {
	this := AverageDailyBondInterestRateView{}
	return &this
}

// NewAverageDailyBondInterestRateViewWithDefaults instantiates a new AverageDailyBondInterestRateView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAverageDailyBondInterestRateViewWithDefaults() *AverageDailyBondInterestRateView {
	this := AverageDailyBondInterestRateView{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *AverageDailyBondInterestRateView) GetDate() int64 {
	if o == nil || IsNil(o.Date) {
		var ret int64
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AverageDailyBondInterestRateView) GetDateOk() (*int64, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *AverageDailyBondInterestRateView) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given int64 and assigns it to the Date field.
func (o *AverageDailyBondInterestRateView) SetDate(v int64) {
	o.Date = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AverageDailyBondInterestRateView) GetValue() float32 {
	if o == nil || IsNil(o.Value) {
		var ret float32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AverageDailyBondInterestRateView) GetValueOk() (*float32, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AverageDailyBondInterestRateView) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float32 and assigns it to the Value field.
func (o *AverageDailyBondInterestRateView) SetValue(v float32) {
	o.Value = &v
}

func (o AverageDailyBondInterestRateView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AverageDailyBondInterestRateView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableAverageDailyBondInterestRateView struct {
	value *AverageDailyBondInterestRateView
	isSet bool
}

func (v NullableAverageDailyBondInterestRateView) Get() *AverageDailyBondInterestRateView {
	return v.value
}

func (v *NullableAverageDailyBondInterestRateView) Set(val *AverageDailyBondInterestRateView) {
	v.value = val
	v.isSet = true
}

func (v NullableAverageDailyBondInterestRateView) IsSet() bool {
	return v.isSet
}

func (v *NullableAverageDailyBondInterestRateView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAverageDailyBondInterestRateView(val *AverageDailyBondInterestRateView) *NullableAverageDailyBondInterestRateView {
	return &NullableAverageDailyBondInterestRateView{value: val, isSet: true}
}

func (v NullableAverageDailyBondInterestRateView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAverageDailyBondInterestRateView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


